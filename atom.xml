<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Whatbeg&#39;s blog</title>
  <subtitle>路漫漫其修远兮，仍将上下而求索</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://whatbeg.com/"/>
  <updated>2016-05-02T02:30:44.465Z</updated>
  <id>http://whatbeg.com/</id>
  
  <author>
    <name>whatbeg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>当我谈阅读时我在谈些什么</title>
    <link href="http://whatbeg.com/2016/05/02/talkread.html"/>
    <id>http://whatbeg.com/2016/05/02/talkread.html</id>
    <published>2016-05-02T02:24:35.000Z</published>
    <updated>2016-05-02T02:30:44.465Z</updated>
    
    <content type="html">&lt;p&gt;我从小就喜欢阅读和写作，小时候爷爷常常倒腾进来各种的书籍，我总能找到很多我想看的书，那时学业不紧，一放暑假就是狂玩，玩腻了就看看书，记得当年三国水浒这两部读得我热血澎湃，里面的仗义豪情，英雄气概让我为之痴迷，并且还不遗余力地收集着那些人物卡片，当然，方便面大部分是别人吃的。上到高中，空余时间就少了很多，充斥在我们周围的大多变成了读者，青年文摘，电脑报，篮球报，游戏报等故事资讯类读物，都是相互传阅，也是蛮有意思的。&lt;/p&gt;
&lt;p&gt;到大学我经常去图书馆找书来看，可是前几年都是看到一本，略略翻看一下，觉得有点意思就拿来看了，一看可能就坚持看完，不是极烂我一般不会中途丢掉，可是当时的品鉴力是很弱的，不知道什么是好书，什么是不值得拿起来看的书，导致鸡汤读了很多，成功学也读了不少，这两样书我现在是深恶痛绝的，为什么？&lt;/p&gt;
&lt;p&gt;因为这些书要么试图讲一些众所周知的道理，要么就是极力鼓吹成功，大谈怎样能成功，你可以成功之类的话，仿佛名利权就是这个世界上的唯一价值取向。我们都知道，懂得很多道理，也不见得能过好这一生，道理都懂，可是做到的人很少，鸡汤只能起到暂时麻醉的作用，如果一个人一味沉溺于心灵鸡汤，不仅会逐渐丧失行动力，而且会变得懦弱和玻璃心。&lt;/p&gt;
&lt;p&gt;成功学的书籍更是我们这个时代浮躁的产物，市场上充斥着大量的这类书籍，这些书籍无非先谈一下它的主题，然后举几个例子，然后总结一下这个主题，我们应该怎么怎么做就能成功，应该积极向上，培养人脉，向上管理等等，一个问题是它将别人成功的运气成分极大的忽视了，二是它只写到了成功的案例，而忽略了广大的失败案例，即‘&lt;a href=&quot;http://baike.baidu.com/view/4846327.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;幸存者偏见&lt;/a&gt;’，简单来说就是我们是看到了成功的例子，而失败的例子不会说话。三是妄图使人们相信他们都可以复制里面的成功。四是甚至会编一些逻辑都说不通的故事来忽悠。简直就是洗脑书。&lt;/p&gt;
&lt;p&gt;如果你还是想看点励志的东西，鼓励鼓励自己克服逆境，勇往直前，不放看看某些伟大人物的传记或者传记小说，看看《名人传》，《梵高传》，《约翰·克里斯朵夫》里面那些人物是怎么跟生活搏斗，跟世界搏斗，跟自己搏斗的，你的生活马上充满激情和勇气，当然，过几天仍然可能会早上起来一条路，但是这些名作的优越性在于它会紧紧扎根到我们的心里，强化人们的心灵，当我们遇到低谷时就会在潜意识里获得跳出来的巨大勇气。&lt;/p&gt;
&lt;p&gt;所以说，我的品鉴力是看过很多书才逐渐建立起来的，不过我仍然希望读者能够提前学习到这种品鉴力，实在要体察万类，那些无益的品类最多涉及一本就够了。如果读者不认为自己有着良好的品鉴力，一个好的方法是开始某本书之前事先看一下豆瓣读书的评分和评价，这样往往能帮你决定是否值得读下去。&lt;/p&gt;
&lt;p&gt;在做过必要的筛选过后，世界上的好书仍然不计其数，人们不可能穷尽这些书，所以还是需要作必要的选择取舍。鬼谷先生曾说，欲多则心散，心散则志衰，志衰则思不达也。如果老是此也想读彼也想读，借了或买了一大堆书，极有可能的结果是放在那里吃灰。或者可能滋生急于读完而不是读好的心态，好好的一场与大师的谈话就变成了“大师你快点说，我还约了别的大师”了，诸君切忌。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我从小就喜欢阅读和写作，小时候爷爷常常倒腾进来各种的书籍，我总能找到很多我想看的书，那时学业不紧，一放暑假就是狂玩，玩腻了就看看书，记得当年三国水浒这两部读得我热血澎湃，里面的仗义豪情，英雄气概让我为之痴迷，并且还不遗余力地收集着那些人物卡片，当然，方便面大部分是别人吃的。
    
    </summary>
    
      <category term="随笔" scheme="http://whatbeg.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>【2016读书】4月读书笔记</title>
    <link href="http://whatbeg.com/2016/04/30/2016read-april.html"/>
    <id>http://whatbeg.com/2016/04/30/2016read-april.html</id>
    <published>2016-04-30T14:04:16.000Z</published>
    <updated>2016-04-30T14:08:11.999Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-《追风筝的人》-卡勒德·胡赛尼&quot;&gt;&lt;a href=&quot;#1-《追风筝的人》-卡勒德·胡赛尼&quot; class=&quot;headerlink&quot; title=&quot;1.《追风筝的人》 卡勒德·胡赛尼&quot;&gt;&lt;/a&gt;1.《追风筝的人》 卡勒德·胡赛尼&lt;/h2&gt;&lt;p&gt;看完《追风筝的人》的感觉远不如正在看的时候感觉强烈，似乎我只是看完了一个故事，一个稍微有点长的故事。看完这本书，给我留下深刻影响的并非是这个故事，而是这个故事发生的国度，对，阿富汗，第一次对阿富汗这个国家了解到这个程度。以前的我对阿富汗的印象包括：战乱，贫穷，干旱，可是现在多了几样：政治，苦难，人性，以及宗教。这是个离我们不远的国度，他们依然有着美丽善良的人们，即使遭受战争，动乱，宗教迫害，种族歧视，仍然有很多可爱热心的人生活在那里。阿米尔和哈桑，他们都是善良的，只是他们在那个充满种族歧视的年代，难免无法做成真正的朋友，哈桑的忠心让我钦佩，阿米尔的悔改让我动容。总之，盖上这本书，回荡在我脑中的，更多的是那个年代阿富汗一幅幅的画面。为这个故事致敬，为作者致敬！&lt;/p&gt;
&lt;h2 id=&quot;2-《HTTP权威指南》-David等&quot;&gt;&lt;a href=&quot;#2-《HTTP权威指南》-David等&quot; class=&quot;headerlink&quot; title=&quot;2.《HTTP权威指南》 David等&quot;&gt;&lt;/a&gt;2.《HTTP权威指南》 David等&lt;/h2&gt;&lt;p&gt;全面介绍了HTTP协议的各个部分，十多年前的书了，但是至今仍被奉为Web开发者必读经典。我的书评：&lt;a href=&quot;http://whatbeg.com/2016/04/06/httpguide.html&quot;&gt;http://whatbeg.com/2016/04/06/httpguide.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-《浪潮之巅》-下-吴军&quot;&gt;&lt;a href=&quot;#3-《浪潮之巅》-下-吴军&quot; class=&quot;headerlink&quot; title=&quot;3.《浪潮之巅》(下)  吴军&quot;&gt;&lt;/a&gt;3.《浪潮之巅》(下)  吴军&lt;/h2&gt;&lt;p&gt;此前很多人推荐这本书，拿起一看，迅速地吸引了我，这本书讲述了很多科技公司的历史，有辉煌有没落。这本书只讲商业，无关其他。如果你是一个程序员，那么这本书能把你的视角从具体的技术上升到整个行业，能让你有不同的感受。&lt;br&gt;简单介绍一下这本书，它讲了如下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一些曾经辉煌一时，但是后来又没落下去的公司&lt;/li&gt;
&lt;li&gt;解释了什么叫风险投资，以及对风险投资进行剖析，并介绍了一些著名的风投公司。&lt;/li&gt;
&lt;li&gt;信息产业的规律性&lt;ul&gt;
&lt;li&gt;70-20-10定律：一个稳定的信息行业老大占市场份额70%，老二占20%左右，而剩下的10%由剩下的小公司划分。&lt;/li&gt;
&lt;li&gt;诺威格定律：一个公司的市场占有率超过50%，就无法再使占有率翻番了，它的成长会受限于整个行业的成长，所以，它只能寻求新的增长点，才能不断满足华尔街的预期。&lt;/li&gt;
&lt;li&gt;基因决定定律：一个公司的基因决定了一个公司的命运，一个公司做到一定的程度想要转型是很困难的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;斯坦福大学的教育模式，是创业的孵化器。&lt;/li&gt;
&lt;li&gt;介绍了投资银行，金融体系，华尔街的重要作用。&lt;/li&gt;
&lt;li&gt;介绍了Google公司的历史与其企业文化&lt;/li&gt;
&lt;li&gt;成功的转基因的例子： 诺基亚，3M，GE&lt;/li&gt;
&lt;li&gt;探讨了什么是最佳的商业模式，即印钞机一样的自动挣钱的模式，如Google的广告系统，eBay、亚马逊的在线时长，戴尔的虚拟工厂，腾讯的虚拟物品等。&lt;/li&gt;
&lt;li&gt;探讨互联网2.0，以及成功的互联网2.0公司，虽然极少&lt;/li&gt;
&lt;li&gt;金融风暴，金融危机是如何产生的，又是如何影响科技公司的。&lt;/li&gt;
&lt;li&gt;云计算及其泡沫与机会&lt;/li&gt;
&lt;li&gt;对下一个千亿公司领域等的分析预测。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;精彩书摘：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.通过一款产品抓住终端用户，然后通过一些服务从每一个用户身上挣钱。&lt;/li&gt;
&lt;li&gt;2.中国的问题是，人们似乎不需要靠科技的进步和实业就可以取得财富。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;《爱你就像爱生命》-王小波&quot;&gt;&lt;a href=&quot;#《爱你就像爱生命》-王小波&quot; class=&quot;headerlink&quot; title=&quot;《爱你就像爱生命》  王小波&quot;&gt;&lt;/a&gt;《爱你就像爱生命》  王小波&lt;/h2&gt;&lt;p&gt;王小波的作品语言很优美，有时也很直白，什么话都是可以说的，这也体现了他的真实，不矫饰，读来着实有趣。&lt;br&gt;这本书是他的书信集，大部分是情书吧，不得不说小波叔简直太能撩了，撩得天昏地暗，日月无光，是块冰也被他说化了。。&lt;br&gt;波叔还是一个地道的程序员来的，什么C语言，汇编，FORTRAN，虚拟内存，玩的飞起，各种程序自己写，攒机搞DIY也是一把好手，什么？电脑坏了？换块板子就好了。&lt;br&gt;还有一段描述欧洲各国的话挺精彩，也很准确：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英国与欧陆截然不同，又古板又整齐，不过穷得很&lt;br&gt;法国人贪大求洋，拼命摆排场，追尖端，就没看见卢浮宫已经被烟熏黑了&lt;br&gt;意大利到处都是古迹和贼&lt;br&gt;奥地利和德国没有不守规矩的人&lt;br&gt;荷兰干净漂亮，比利时又破又烂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还有一些现在流行的脏话好像这里也有，不会是他发明的吧。。&lt;br&gt;比如什么“肚皮上割口子，假充二笔(bi)”（这话我一开始都没懂。。），“傻逼”之类的词。&lt;br&gt;这就是王小波，一个有趣的人。&lt;br&gt;经典语录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我曾经相信只要不虚度光阴，把命运赐给我的全部智力发挥到顶点，做成一件无愧于人类智慧的事情，就对得起自己，并且也是对未来的贡献。&lt;/li&gt;
&lt;li&gt;请你不要恨我，我给你唱一支好听的歌吧。&lt;/li&gt;
&lt;li&gt;人在年轻时，觉得到处都是人，别人的事都是你的事，到了中年以后，才觉得世界上除了家人已经一无所有，自己的事都做不过来。以此类推，到了老年，必定觉得很孤独，还会觉得做什么都力不从心。&lt;/li&gt;
&lt;li&gt;静下来想你，觉得一切都美好得不可思议。&lt;/li&gt;
&lt;li&gt;我的勇气和你的勇气加起来，对付这个世界总够了吧？要无忧无虑地去抒情，去歌舞狂欢，去向世界发出我们的声音，我一个人是不敢的，我怕人家说我疯，有了你我就敢。只要有你一个，就不孤独！ &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;五月读书计划&quot;&gt;&lt;a href=&quot;#五月读书计划&quot; class=&quot;headerlink&quot; title=&quot;五月读书计划&quot;&gt;&lt;/a&gt;五月读书计划&lt;/h3&gt;&lt;p&gt;1.*《机器学习实战》&lt;br&gt;2.《鸟哥的Linux私房菜》&lt;br&gt;3.《浪潮之巅》&lt;br&gt;4.王小波&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-《追风筝的人》-卡勒德·胡赛尼&quot;&gt;&lt;a href=&quot;#1-《追风筝的人》-卡勒德·胡赛尼&quot; class=&quot;headerlink&quot; title=&quot;1.《追风筝的人》 卡勒德·胡赛尼&quot;&gt;&lt;/a&gt;1.《追风筝的人》 卡勒德·胡赛尼&lt;/h2&gt;&lt;p&gt;看完《追风筝的人》的
    
    </summary>
    
      <category term="读书" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>许巍写歌最喜欢用什么词？</title>
    <link href="http://whatbeg.com/2016/04/26/xuweilrc.html"/>
    <id>http://whatbeg.com/2016/04/26/xuweilrc.html</id>
    <published>2016-04-26T11:22:39.000Z</published>
    <updated>2016-04-27T02:11:34.565Z</updated>
    
    <content type="html">&lt;h2 id=&quot;关键词&quot;&gt;&lt;a href=&quot;#关键词&quot; class=&quot;headerlink&quot; title=&quot;关键词&quot;&gt;&lt;/a&gt;关键词&lt;/h2&gt;&lt;p&gt;结巴分词 中文分词 TF-IDF 词频 逆文档频率&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;自从第一次听到许巍的歌，就深深地迷上了他的歌，感觉每一首都钻到了我的心里，也早已把他的歌听得烂熟了。许巍，我最喜欢的歌手，没有之一！&lt;/p&gt;
&lt;p&gt;本文我要解决以下问题： &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;爬取许巍每首歌的歌词，统计他最喜欢用哪些词（即歌词的关键词）&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很简单地想到就是直接统计每个词出现的次数（词频TF，词出现的频率，下文同），这样确实可以得到大部分的信息。但是也有两点不好：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.有很多诸如”的”,”一个”,”没有”等无实意的助词等可能会得到很高的词频，这些词叫做“&lt;a href=&quot;http://baike.baidu.com/view/3784680.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;停用词&lt;/a&gt;”，当然我们可以把它们去掉，像我的代码里就去掉了长度小于2的词，两个词及以上就不能再去了，但是还是会有一些残留。&lt;/li&gt;
&lt;li&gt;2.如果出现次数一样呢？当然如果只是为了看下每个词出现的情况，大概了解一下，其实统计下词频就够了，但是为了充分利用数据（好不容易爬来的。。），并得到更多的信息，不妨再多做一步吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑词频相同的两个词A和B，都出现n次，如果A只在一篇文章出现，出现n次，而B在n篇文章中出现，每篇都出现1次，那么我们认为B这个词很常见，大家都有，所以并不重要，也不能够很好地区分文档；而词A要出现只出现在一篇文章，出现地点比较少，大家不常见到，且能够很好地区分出那篇文档，那么认为它更加重要。自然想到重要性的体现用某个单词在多少篇文档中出现的次数来衡量（sfd），这就是IDF（逆文档频率 Inverse Document Frequency)。&lt;br&gt;上面两个指标TF和IDF乘起来就得到了著名的TF-IDF算法fd的核心。&lt;br&gt;&lt;a href=&quot;http://baike.baidu.com/view/1228847.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;什么是TF-IDF算法?&lt;/a&gt;&lt;br&gt;下面是计算方法：&lt;br&gt;由于每首歌的长短不同，所以我们将词频归一化，即某个词的词频记为该词在每篇文章中的次数除以该篇文章的总词数的累加和。&lt;/p&gt;
&lt;p&gt;$$ TF_i = \sum{Freq_i \over Length(D_d)}$$&lt;/p&gt;
&lt;p&gt;而IDF记为文档总数除以出现该词的文档数，显然，出现某个词的文档数越多，分母越大，则IDF越小，比重越小。&lt;/p&gt;
&lt;p&gt;$$IDF_i = {|D| \over numDoc_i}$$&lt;/p&gt;
&lt;p&gt;$$TF-IDF = TF \times IDF$$&lt;/p&gt;
&lt;h2 id=&quot;获取数据&quot;&gt;&lt;a href=&quot;#获取数据&quot; class=&quot;headerlink&quot; title=&quot;获取数据&quot;&gt;&lt;/a&gt;获取数据&lt;/h2&gt;&lt;p&gt;获取数据细节不说了，就是查看网页源代码，然后制定爬取策略，我没有用框架，但是代码量也不大。如果不熟悉爬取数据的方法，可以看我这几篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://whatbeg.com/2016/04/14/logincnblogs.html&quot;&gt;【Python模拟登录】(二) 加密与重放方式登录 -以模拟登录博客园为例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5325529.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python数据分析】Python3操作Excel-以豆瓣图书Top250为例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/4199604.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python数据分析】简单爬虫 爬取知乎神回复&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5127850.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python数据分析】工作日发文章比周末发文章访问量高？&lt;/a&gt;&lt;br&gt;这里还是贴下实现的代码：&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urllib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; codecs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getPostdata&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(artistId=&lt;span class=&quot;number&quot;&gt;1158&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s = requests.Session()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postData = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;artSong&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;artistId&#39;&lt;/span&gt;: artistId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s,postData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PrintLis&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(lis)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(lis)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(lis[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Cleanit&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Str)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Str = Str.replace(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/br&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Str = Str.replace(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;br/&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Str = Str.replace(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/div&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Str = Str.replace(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div class=&quot;lrc&quot; id=&quot;lrc_yes&quot;&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;).strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnLis = Str.split(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;br&amp;gt;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnLis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WriteLis&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(fr,lis)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fr.write(li + &lt;span class=&quot;string&quot;&gt;&#39;\r\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Crawl&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(s,headers,crawlist,crawlist_name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path_base = &lt;span class=&quot;string&quot;&gt;&quot;D:\\Python Workspace\\Data\\LRC_许巍\\&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    geciurl_base = &lt;span class=&quot;string&quot;&gt;&quot;http://www.kuwo.cn/geci/l_&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(crawlist)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ID = crawlist[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        geciurl = geciurl_base + ID&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filename = str(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path = path_base + filename + &lt;span class=&quot;string&quot;&gt;&#39;.txt&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(crawlist_name[i],path,geciurl)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fr = codecs.open(path,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        req = s.get(geciurl,headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        soup = BeautifulSoup(req.text,&lt;span class=&quot;string&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lrc_yes = soup.findAll(attrs = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;lrc_yes&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(lrc_yes) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        returnLis = Cleanit(str(lrc_yes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#PrintLis(returnLis)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fr.write(crawlist_name[i] + &lt;span class=&quot;string&quot;&gt;&#39;\r\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        WriteLis(fr,returnLis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fr.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Accept&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;application/json, text/javascript, */*; q=0.01&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Referer&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;http://passport.cnblogs.com/user/signin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = &lt;span class=&quot;string&quot;&gt;&quot;http://www.kuwo.cn/geci/wb/getJsonData&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s,postData = getPostdata()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    idtoname = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mylis = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postData[&lt;span class=&quot;string&quot;&gt;&#39;page&#39;&lt;/span&gt;] = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        req = s.post(url,data = postData,headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dic = req.content.decode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        patids = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;\&quot;rid\&quot;:\&quot;(.*)\&quot;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        patnames = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;\&quot;name\&quot;:\&quot;(.*)\&quot;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pat2 = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;\[(.*)\]&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        js = pat2.findall(dic)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pat3 = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;\&amp;#123;(.*?)\&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lis = pat3.findall(js)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(len(lis))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sonlis = li.split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ids = patids.findall(sonlis[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            names = patnames.findall(sonlis[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Mylis.append([ids[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],names[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39;(&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#print(ids[0],names[0].split(&#39; &#39;)[0].split(&#39;-&#39;)[0])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            idtoname[ids[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]] = names[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nameset = set([])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    crawlist = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    crawlist_name = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; items &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Mylis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(items)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; items[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nameset:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nameset.add(items[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            crawlist.append(items[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            crawlist_name.append(items[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Crawl(s,headers,crawlist,crawlist_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Get()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包括了去重等操作，不多次爬取同名歌曲的歌词， 这样下来也有160多个，显然不科学，我自己删掉了一些明显不合理的，剩下不到100个文件，其实他的原创歌曲好像也就几十首来的，这些文件还有一些是空文件，每个歌词文件第一行我都写了歌曲名字，对统计影响不大，其他歌词里或许还有其他信息什么的，影响也不大，就不管了。&lt;/p&gt;
&lt;h2 id=&quot;统计&quot;&gt;&lt;a href=&quot;#统计&quot; class=&quot;headerlink&quot; title=&quot;统计&quot;&gt;&lt;/a&gt;统计&lt;/h2&gt;&lt;p&gt;然后就是统计，计算：&lt;br&gt;中文分词用的是&lt;a href=&quot;https://github.com/fxsjy/jieba&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;结巴分词&lt;/a&gt;，还是挺准确的。&lt;br&gt;安装的话(Python 3.x, Windows)最简便的方法就是: pip3 install jieba3k&lt;br&gt;一个简单的分词例子：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jieba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;list(jieba.cut(&lt;span class=&quot;string&quot;&gt;&#39;我爱北京天安门&#39;&lt;/span&gt;,cut_all=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building prefix dict &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; C:\Users\Allen\AppData\Local\Programs\Python\Python35&lt;span class=&quot;number&quot;&gt;-32&lt;/span&gt;\lib\site-packages\jieba\dict.txt ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Loading model &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; cache C:\Users\Allen\AppData\Local\Temp\jieba.cache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Loading model cost &lt;span class=&quot;number&quot;&gt;1.318878412246704&lt;/span&gt; seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Prefix dict has been built succesfully.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;我&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;爱&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;北京&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;天安门&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jieba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; operator &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itemgetter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getpath&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(i)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path = &lt;span class=&quot;string&quot;&gt;&quot;D:\\Python Workspace\\Data\\LRC_许巍\\%d.txt&quot;&lt;/span&gt; % i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;analysis&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TF = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IDF = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Count = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filepath = getpath(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nowdic = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SumWords = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(filepath) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; fr:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; fr.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    line = line.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lis = list(jieba.cut(line,cut_all=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    SumWords += float(len(lis))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(li) &amp;lt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; IDF.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            IDF[li] = [i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            IDF[li].append(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nowdic.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            nowdic[li] = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            nowdic[li] += &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Count += &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; SumWords &amp;gt; &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nowdic.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        nowdic[key] = float(nowdic[key] / SumWords)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; TF.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            TF[key] = nowdic[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            TF[key] += nowdic[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; IOError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; err:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; IDF.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        numDoc = float(len(set(IDF[key])))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IDF[key] = log(Count / (numDoc + &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TF_IDF = TF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; TF_IDF.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TF_IDF[key] = float(TF_IDF[key] * TF[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(len(TF))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sortedDic = sorted(TF_IDF.items(),key=itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw = open(&lt;span class=&quot;string&quot;&gt;&#39;D:\\Python Workspace\\Data\\许巍TFIDF.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sortedDic:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fw.write(str(key[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])+&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;+str(key[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])+&lt;span class=&quot;string&quot;&gt;&#39;\r\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(key[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],key[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    analysis()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;结果分析&quot;&gt;&lt;a href=&quot;#结果分析&quot; class=&quot;headerlink&quot; title=&quot;结果分析&quot;&gt;&lt;/a&gt;结果分析&lt;/h2&gt;&lt;p&gt;最后得出TF-IDF值最高的几个词如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;单词&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;出现次数&lt;/th&gt;
&lt;th&gt;TF-IDF&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;世界&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;106&lt;/td&gt;
&lt;td&gt;0.364377&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;温暖&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;68&lt;/td&gt;
&lt;td&gt;0.145753&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;我们&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;69&lt;/td&gt;
&lt;td&gt;0.141222&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;春天&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;55&lt;/td&gt;
&lt;td&gt;0.113613&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;遥远&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;45&lt;/td&gt;
&lt;td&gt;0.079318&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;永远&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;53&lt;/td&gt;
&lt;td&gt;0.076681&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;天空&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;46&lt;/td&gt;
&lt;td&gt;0.072888&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;梦想&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;48&lt;/td&gt;
&lt;td&gt;0.068688&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;阳光&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;47&lt;/td&gt;
&lt;td&gt;0.064827&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;自由&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;41&lt;/td&gt;
&lt;td&gt;0.060018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;IDF最高的几个词如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;IDF Top 5&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;出现次数&lt;/th&gt;
&lt;th&gt;IDF&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;结束&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;韵律&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;木马&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;6&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;恍若隔世&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;2&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;土壤&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;由以上两个表可以看出，“世界”这个词的TF-IDF值是最高的，而且比其它词高出很多，说明它出现的多也比较集中，比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;心中那自由的世界      –《蓝莲花》&lt;br&gt;让我们的世界绚丽多彩  –《旅行》&lt;br&gt;那理想世界 就像一道光芒 –《那一年》&lt;br&gt;想了解这世界 命运 –《灿烂》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;等等，看来许巍真的很喜欢用世界这个词啊。&lt;br&gt;还可以看出IDF高的基本都是出现很少的，因为太集中了，就出现在一首歌里。。&lt;/p&gt;
&lt;h2 id=&quot;后记&quot;&gt;&lt;a href=&quot;#后记&quot; class=&quot;headerlink&quot; title=&quot;后记&quot;&gt;&lt;/a&gt;后记&lt;/h2&gt;&lt;p&gt;数据拿到了，下一步可以考虑拓展地做一些工作了，比如计算两首歌的相似性，看哪两首歌最像，可以参考&lt;a href=&quot;http://www.ruanyifeng.com/blog/2013/03/cosine_similarity.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;余弦相似性&lt;/a&gt;，或者自动生成每首歌的摘要，或以词搜歌什么的，读者有什么好的想法欢迎评论哦:D&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关键词&quot;&gt;&lt;a href=&quot;#关键词&quot; class=&quot;headerlink&quot; title=&quot;关键词&quot;&gt;&lt;/a&gt;关键词&lt;/h2&gt;&lt;p&gt;结巴分词 中文分词 TF-IDF 词频 逆文档频率&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;hea
    
    </summary>
    
      <category term="数据挖掘分析与可视化" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Numpy模块的一些方法收集</title>
    <link href="http://whatbeg.com/2016/04/25/numpy.html"/>
    <id>http://whatbeg.com/2016/04/25/numpy.html</id>
    <published>2016-04-25T12:36:55.000Z</published>
    <updated>2016-04-25T12:39:54.000Z</updated>
    
    <content type="html">&lt;p&gt;最近经常需要用到Python矩阵计算处理模块Numpy，有些方法不是很熟悉，这里手机记录一下，备查备忘。&lt;/p&gt;
&lt;h2 id=&quot;矩阵对象的属性&quot;&gt;&lt;a href=&quot;#矩阵对象的属性&quot; class=&quot;headerlink&quot; title=&quot;矩阵对象的属性&quot;&gt;&lt;/a&gt;矩阵对象的属性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;matrix.T transpose：返回矩阵的转置矩阵&lt;/li&gt;
&lt;li&gt;matrix.H hermitian (conjugate) &lt;/li&gt;
&lt;li&gt;transpose：返回复数矩阵的共轭元素矩阵&lt;/li&gt;
&lt;li&gt;matrix.I inverse：返回矩阵的逆矩阵&lt;/li&gt;
&lt;li&gt;matrix.A base array：返回矩阵基于的数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;矩阵对象的方法&quot;&gt;&lt;a href=&quot;#矩阵对象的方法&quot; class=&quot;headerlink&quot; title=&quot;矩阵对象的方法&quot;&gt;&lt;/a&gt;矩阵对象的方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;all([axis, out]) :沿给定的轴判断矩阵所有元素是否为真(非0即为真)&lt;/li&gt;
&lt;li&gt;any([axis, out]) :沿给定轴的方向判断矩阵元素是否为真，只要一个元素为真则为真。&lt;/li&gt;
&lt;li&gt;argmax([axis, out]) :沿给定轴的方向返回最大元素的索引（最大元素的位置）.&lt;/li&gt;
&lt;li&gt;argmin([axis, out]): 沿给定轴的方向返回最小元素的索引（最小元素的位置）&lt;/li&gt;
&lt;li&gt;argsort([axis, kind, order]) :返回排序后的索引矩阵&lt;/li&gt;
&lt;li&gt;astype(dtype[, order, casting, subok, copy]):将该矩阵数据复制，且数据类型为指定的数据类型&lt;/li&gt;
&lt;li&gt;byteswap(inplace) Swap the bytes of the array elements&lt;/li&gt;
&lt;li&gt;choose(choices[, out, mode]) :根据给定的索引得到一个新的数据矩阵（索引从choices给定）&lt;/li&gt;
&lt;li&gt;clip(a_min, a_max[, out]) :返回新的矩阵，比给定元素大的元素为a_max，小的为a_min&lt;/li&gt;
&lt;li&gt;compress(condition[, axis, out]) :返回满足条件的矩阵&lt;/li&gt;
&lt;li&gt;conj() :返回复数的共轭复数&lt;/li&gt;
&lt;li&gt;conjugate() :返回所有复数的共轭复数元素&lt;/li&gt;
&lt;li&gt;copy([order]) :复制一个矩阵并赋给另外一个对象，b=a.copy()&lt;/li&gt;
&lt;li&gt;cumprod([axis, dtype, out]) :返回沿指定轴的元素累积矩阵&lt;/li&gt;
&lt;li&gt;cumsum([axis, dtype, out]) :返回沿指定轴的元素累积和矩阵&lt;/li&gt;
&lt;li&gt;diagonal([offset, axis1, axis2]) :返回矩阵中对角线的数据&lt;/li&gt;
&lt;li&gt;dot(b[, out]) :两个矩阵的点乘&lt;/li&gt;
&lt;li&gt;dump(file) :将矩阵存储为指定文件,可以通过pickle.loads()或者numpy.loads()如:a.dump(‘d:\a.txt’)&lt;/li&gt;
&lt;li&gt;dumps() :将矩阵的数据转存为字符串.&lt;/li&gt;
&lt;li&gt;fill(value) :将矩阵中的所有元素填充为指定的value&lt;/li&gt;
&lt;li&gt;flatten([order]) :将矩阵转化为一个一维的形式，但是还是matrix对象&lt;/li&gt;
&lt;li&gt;getA() :返回自己，但是作为ndarray返回&lt;/li&gt;
&lt;li&gt;getA1()：返回一个扁平（一维）的数组（ndarray）&lt;/li&gt;
&lt;li&gt;getH() :返回自身的共轭复数转置矩阵&lt;/li&gt;
&lt;li&gt;getI() :返回本身的逆矩阵&lt;/li&gt;
&lt;li&gt;getT() :返回本身的转置矩阵&lt;/li&gt;
&lt;li&gt;max([axis, out]) ：返回指定轴的最大值&lt;/li&gt;
&lt;li&gt;mean([axis, dtype, out]) :沿给定轴方向，返回其均值&lt;/li&gt;
&lt;li&gt;min([axis, out]) ：返回指定轴的最小值&lt;/li&gt;
&lt;li&gt;nonzero() :返回非零元素的索引矩阵&lt;/li&gt;
&lt;li&gt;prod([axis, dtype, out]) :返回指定轴方型上，矩阵元素的乘积.&lt;/li&gt;
&lt;li&gt;ptp([axis, out]) :返回指定轴方向的最大值减去最小值.&lt;/li&gt;
&lt;li&gt;put(indices, values[, mode]) :用给定的value替换矩阵本身给定索引（indices）位置的值&lt;/li&gt;
&lt;li&gt;ravel([order]) :返回一个数组，该数组是一维数组或平数组&lt;/li&gt;
&lt;li&gt;repeat(repeats[, axis]) :重复矩阵中的元素，可以沿指定轴方向重复矩阵元素，repeats为重复次数&lt;/li&gt;
&lt;li&gt;reshape(shape[, order]) :改变矩阵的大小,如：reshape([2,3])&lt;/li&gt;
&lt;li&gt;resize(new_shape[, refcheck]) :改变该数据的尺寸大小&lt;/li&gt;
&lt;li&gt;round([decimals, out]) :返回指定精度后的矩阵，指定的位数采用四舍五入，若为1，则保留一位小数&lt;/li&gt;
&lt;li&gt;searchsorted(v[, side, sorter]) :搜索V在矩阵中的索引位置&lt;/li&gt;
&lt;li&gt;sort([axis, kind, order]) :对矩阵进行排序或者按轴的方向进行排序&lt;/li&gt;
&lt;li&gt;squeeze([axis]) :移除长度为1的轴&lt;/li&gt;
&lt;li&gt;std([axis, dtype, out, ddof]) :沿指定轴的方向，返回元素的标准差.&lt;/li&gt;
&lt;li&gt;sum([axis, dtype, out]) ：沿指定轴的方向，返回其元素的总和&lt;/li&gt;
&lt;li&gt;swapaxes(axis1, axis2):交换两个轴方向上的数据.&lt;/li&gt;
&lt;li&gt;take(indices[, axis, out, mode]) :提取指定索引位置的数据,并以一维数组或者矩阵返回(主要取决axis)&lt;/li&gt;
&lt;li&gt;tofile(fid[, sep, format]) :将矩阵中的数据以二进制写入到文件&lt;/li&gt;
&lt;li&gt;tolist() :将矩阵转化为列表形式&lt;/li&gt;
&lt;li&gt;tostring([order]):将矩阵转化为python的字符串.&lt;/li&gt;
&lt;li&gt;trace([offset, axis1, axis2, dtype, out]):返回对角线元素之和&lt;/li&gt;
&lt;li&gt;transpose(*axes) :返回矩阵的转置矩阵，不改变原有矩阵&lt;/li&gt;
&lt;li&gt;var([axis, dtype, out, ddof]) ：沿指定轴方向，返回矩阵元素的方差&lt;/li&gt;
&lt;li&gt;view([dtype, type]) :生成一个相同数据，但是类型为指定新类型的矩阵。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近经常需要用到Python矩阵计算处理模块Numpy，有些方法不是很熟悉，这里手机记录一下，备查备忘。&lt;/p&gt;
&lt;h2 id=&quot;矩阵对象的属性&quot;&gt;&lt;a href=&quot;#矩阵对象的属性&quot; class=&quot;headerlink&quot; title=&quot;矩阵对象的属性&quot;&gt;&lt;/a&gt;矩阵对象的
    
    </summary>
    
      <category term="数据挖掘分析与可视化" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Latex/MathJax的一些语法</title>
    <link href="http://whatbeg.com/2016/04/25/latexsyntax.html"/>
    <id>http://whatbeg.com/2016/04/25/latexsyntax.html</id>
    <published>2016-04-25T04:53:28.000Z</published>
    <updated>2016-04-25T05:28:42.238Z</updated>
    
    <content type="html">&lt;p&gt;Latex的一些公式，列一下方便查阅。&lt;br&gt;图来自《一份不太简短的LATEX2介绍》&lt;/p&gt;
&lt;h2 id=&quot;数学模式重音符号-带帽符&quot;&gt;&lt;a href=&quot;#数学模式重音符号-带帽符&quot; class=&quot;headerlink&quot; title=&quot;数学模式重音符号(带帽符)&quot;&gt;&lt;/a&gt;数学模式重音符号(带帽符)&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex1.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;希腊字母&quot;&gt;&lt;a href=&quot;#希腊字母&quot; class=&quot;headerlink&quot; title=&quot;希腊字母&quot;&gt;&lt;/a&gt;希腊字母&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex2.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;二元关系&quot;&gt;&lt;a href=&quot;#二元关系&quot; class=&quot;headerlink&quot; title=&quot;二元关系&quot;&gt;&lt;/a&gt;二元关系&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex3.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;二元运算符&quot;&gt;&lt;a href=&quot;#二元运算符&quot; class=&quot;headerlink&quot; title=&quot;二元运算符&quot;&gt;&lt;/a&gt;二元运算符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex4.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;大运算符&quot;&gt;&lt;a href=&quot;#大运算符&quot; class=&quot;headerlink&quot; title=&quot;大运算符&quot;&gt;&lt;/a&gt;大运算符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex5.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;箭头&quot;&gt;&lt;a href=&quot;#箭头&quot; class=&quot;headerlink&quot; title=&quot;箭头&quot;&gt;&lt;/a&gt;箭头&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex6.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;定界符&quot;&gt;&lt;a href=&quot;#定界符&quot; class=&quot;headerlink&quot; title=&quot;定界符&quot;&gt;&lt;/a&gt;定界符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex7.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;大定界符&quot;&gt;&lt;a href=&quot;#大定界符&quot; class=&quot;headerlink&quot; title=&quot;大定界符&quot;&gt;&lt;/a&gt;大定界符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex8.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;其他符号&quot;&gt;&lt;a href=&quot;#其他符号&quot; class=&quot;headerlink&quot; title=&quot;其他符号&quot;&gt;&lt;/a&gt;其他符号&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex9.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;非数学符号&quot;&gt;&lt;a href=&quot;#非数学符号&quot; class=&quot;headerlink&quot; title=&quot;非数学符号&quot;&gt;&lt;/a&gt;非数学符号&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex10.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS定界符&quot;&gt;&lt;a href=&quot;#AMS定界符&quot; class=&quot;headerlink&quot; title=&quot;AMS定界符&quot;&gt;&lt;/a&gt;AMS定界符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex11.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS希腊和希伯来字母&quot;&gt;&lt;a href=&quot;#AMS希腊和希伯来字母&quot; class=&quot;headerlink&quot; title=&quot;AMS希腊和希伯来字母&quot;&gt;&lt;/a&gt;AMS希腊和希伯来字母&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex12.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS二元关系&quot;&gt;&lt;a href=&quot;#AMS二元关系&quot; class=&quot;headerlink&quot; title=&quot;AMS二元关系&quot;&gt;&lt;/a&gt;AMS二元关系&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex13.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS箭头&quot;&gt;&lt;a href=&quot;#AMS箭头&quot; class=&quot;headerlink&quot; title=&quot;AMS箭头&quot;&gt;&lt;/a&gt;AMS箭头&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex14.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS二元否定关系符和箭头&quot;&gt;&lt;a href=&quot;#AMS二元否定关系符和箭头&quot; class=&quot;headerlink&quot; title=&quot;AMS二元否定关系符和箭头&quot;&gt;&lt;/a&gt;AMS二元否定关系符和箭头&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex15.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS二元运算符&quot;&gt;&lt;a href=&quot;#AMS二元运算符&quot; class=&quot;headerlink&quot; title=&quot;AMS二元运算符&quot;&gt;&lt;/a&gt;AMS二元运算符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex16.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS其他符号&quot;&gt;&lt;a href=&quot;#AMS其他符号&quot; class=&quot;headerlink&quot; title=&quot;AMS其他符号&quot;&gt;&lt;/a&gt;AMS其他符号&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex17.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;数学字母&quot;&gt;&lt;a href=&quot;#数学字母&quot; class=&quot;headerlink&quot; title=&quot;数学字母&quot;&gt;&lt;/a&gt;数学字母&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex18.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Latex的一些公式，列一下方便查阅。&lt;br&gt;图来自《一份不太简短的LATEX2介绍》&lt;/p&gt;
&lt;h2 id=&quot;数学模式重音符号-带帽符&quot;&gt;&lt;a href=&quot;#数学模式重音符号-带帽符&quot; class=&quot;headerlink&quot; title=&quot;数学模式重音符号(带帽符)&quot;&gt;&lt;/
    
    </summary>
    
      <category term="计算机相关知识" scheme="http://whatbeg.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="CS" scheme="http://whatbeg.com/tags/CS/"/>
    
      <category term="Latex" scheme="http://whatbeg.com/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>如何实现并应用决策树算法？</title>
    <link href="http://whatbeg.com/2016/04/23/decisiontree.html"/>
    <id>http://whatbeg.com/2016/04/23/decisiontree.html</id>
    <published>2016-04-23T12:35:01.000Z</published>
    <updated>2016-04-25T05:25:08.210Z</updated>
    
    <content type="html">&lt;p&gt;本文对决策树算法进行简单的总结和梳理，并对著名的决策树算法ID3(Iterative Dichotomiser 迭代二分器)进行实现，实现采用Python语言，一句老梗，“人生苦短，我用Python”，Python确实能够省很多语言方面的事，从而可以让我们专注于问题和解决问题的逻辑。&lt;br&gt;根据不同的数据，我实现了三个版本的ID3算法，复杂度逐步提升：&lt;br&gt;1.纯标称值无缺失数据集&lt;br&gt;2.连续值和标称值混合且无缺失数据集&lt;br&gt;3.连续值和标称值混合，有缺失数据集&lt;br&gt;第一个算法参考了《机器学习实战》的大部分代码，第二、三个算法基于前面的实现进行模块的增加。&lt;/p&gt;
&lt;h2 id=&quot;决策树简介&quot;&gt;&lt;a href=&quot;#决策树简介&quot; class=&quot;headerlink&quot; title=&quot;决策树简介&quot;&gt;&lt;/a&gt;决策树简介&lt;/h2&gt;&lt;p&gt;决策树算法不用说大家应该都知道，是机器学习的一个著名算法，由澳大利亚著名计算机科学家Rose Quinlan发表。&lt;/p&gt;
&lt;p&gt;决策树是一种监督学习的分类算法，目的是学习出一颗决策树，该树中间节点是数据特征，叶子节点是类别，实际分类时根据树的结构，一步一步根据当前数据特征取值选择进入哪一颗子树，直到走到叶子节点，叶子节点的类别就是此决策树对此数据的学习结果。下图就是一颗简单的决策树：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree2.png&quot; alt=&quot;一颗简单的决策树&quot;&gt;&lt;br&gt;此决策树用来判断一个具有纹理，触感，密度的西瓜是否是“好瓜”。&lt;br&gt;当有这样一个西瓜，纹理清晰，密度为0.333，触感硬滑，那么要你判断是否是一个“好瓜”，这时如果通过决策树来判断，显然可以一直顺着纹理-&amp;gt;清晰-&amp;gt;密度&amp;lt;=0.382-&amp;gt;否，即此瓜不是“好瓜”，一次决策就这样完成了。正因为决策树决策很方便，并且准确率也较高，所以常常被用来做分类器，也是“机器学习十大算法”之一C4.5的基本思想。&lt;br&gt;学习出一颗决策树首要考虑一个问题，即 根据数据集构建当前树应该选择哪种属性作为树根，即划分标准？&lt;br&gt;考虑最好的情况，一开始选择某个特征，就把数据集划分成功，即在该特征上取某个值的全是一类。&lt;br&gt;考虑最坏的情况，不断选择特征，划分后的数据集总是杂乱无章，就二分类任务来说，总是有正类有负类，一直到特征全部用完了，划分的数据集合还是有正有负，这时只能用投票法，正类多就选正类作为叶子，否则选负类。&lt;br&gt;所以得出了一般结论： 随着划分的进行，我们希望选择一个特征，使得子节点包含的样本尽可能属于同一类别，即“纯度”越高越好。&lt;/p&gt;
&lt;p&gt;基于“纯度”的标准不同，有三种算法：&lt;br&gt;1.ID3算法(Iterative Dichotomiser 迭代二分器)，也是本文要实现的算法，基于信息增益即信息熵来度量纯度&lt;br&gt;2.C4.5算法(Classifier 4.5)，ID3 的后继算法，也是昆兰提出&lt;br&gt;3.CART算法(Classification And Regression Tree)，基于基尼指数度量纯度。&lt;/p&gt;
&lt;h2 id=&quot;ID3算法简介&quot;&gt;&lt;a href=&quot;#ID3算法简介&quot; class=&quot;headerlink&quot; title=&quot;ID3算法简介&quot;&gt;&lt;/a&gt;ID3算法简介&lt;/h2&gt;&lt;p&gt;信息熵是信息论中的一个重要概念，也叫“香农熵”，香农先生的事迹相比很多人都听过，一个人开创了一门理论，牛的不行。香农理论中一个很重要的特征就是”熵“，即”信息内容的不确定性“，香农在进行信息的定量计算的时候，明确地把信息量定义为随机不定性程度的减少。这就表明了他对信息的理解：信息是用来减少随机不定性的东西。或者表达为香农逆定义：信息是确定性的增加。这也印证了决策树以熵作为划分选择的度量标准的正确性，即我们想更快速地从数据中获得更多信息，我们就应该快速降低不确定性，即减少”熵“。&lt;/p&gt;
&lt;p&gt;信息熵定义为：&lt;br&gt;$$Ent(D) = -\sum_{k=1}^{|\mathcal{Y}|}p_k\log_2p_k$$&lt;br&gt;D表示数据集，类别总数为|Y|，pk表示D中第k类样本所占的比例。根据其定义，Ent的值越小，信息纯度越高。Ent的范围是[0,log|Y|]&lt;/p&gt;
&lt;p&gt;下面要选择某个属性进行划分，要依次考虑每个属性，假设当前考虑属性a，a的取值有|V|种，那么我们希望取a作为划分属性，划分到|V|个子节点后，所有子节点的信息熵之和即划分后的信息熵能够有很大的减小，减小的最多的那个属性就是我们选择的属性。&lt;/p&gt;
&lt;p&gt;划分后的信息熵定义为：&lt;br&gt;$$\sum_{v=1}^V{|D^v| \over |D|}Ent(D^v) $$&lt;/p&gt;
&lt;p&gt;所以用属性a对样本集D进行划分的信息增益就是原来的信息熵减去划分后的信息熵：&lt;br&gt;$$Gain(D,a) = Ent(D) - \sum_{v=1}^V{|D^v| \over |D|}Ent(D^v) $$&lt;/p&gt;
&lt;p&gt;ID3算法就是这样每次选择一个属性对样本集进行划分，知道两种情况使这个过程停止：&lt;br&gt;（1）某个子节点样本全部属于一类&lt;br&gt;（2）属性都用完了，这时候如果子节点样本还是不一致，那么只好少数服从多数了&lt;br&gt;算法流程如下：(图片来自网络)&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/ID3algorithm.png-SuoLve.Shuiyin&quot; alt=&quot;ID3算法&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ID3算法实现（纯标称值）&quot;&gt;&lt;a href=&quot;#ID3算法实现（纯标称值）&quot; class=&quot;headerlink&quot; title=&quot;ID3算法实现（纯标称值）&quot;&gt;&lt;/a&gt;ID3算法实现（纯标称值）&lt;/h2&gt;&lt;p&gt;如果样本全部是标称值即离散值的话，会比较简单。&lt;br&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#决策树生成算法： treesID3.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; operator &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itemgetter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;#创建数据集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet = [[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;yes&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;yes&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;no&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;no&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;no&#39;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = [&lt;span class=&quot;string&quot;&gt;&#39;no surfacing&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;flippers&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;filetoDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    all_lines = fr.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = all_lines[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].strip().split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; all_lines[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = line.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lis = line.split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dataSet.append(lis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;calcEnt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet)&lt;/span&gt;:&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;#计算香农熵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numEntries = len(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    labelCounts = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label = featVec[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; label &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; labelCounts.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            labelCounts[label] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        labelCounts[label] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Ent = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; labelCounts.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p_i = float(labelCounts[key]/numEntries)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Ent -= p_i * log(p_i,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Ent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, axis, value)&lt;/span&gt;:&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#划分数据集,找出第axis个属性为value的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == value:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;chooseBestFeat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numFeat = len(dataSet[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Entropy = calcEnt(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSetlen = float(len(dataSet))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestGain = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeat = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(numFeat):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allvalue = [featVec[i] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        specvalue = set(allvalue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nowEntropy = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; specvalue:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Dv = splitDataSet(dataSet,i,v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p = len(Dv)/DataSetlen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nowEntropy += p * calcEnt(Dv)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; Entropy - nowEntropy &amp;gt; bestGain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestGain = Entropy - nowEntropy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestFeat = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bestFeat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Vote&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(classList)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classdic = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vote &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; classList:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; vote &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; classdic.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            classdic[vote] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classdic[vote] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sortedclassDic = sorted(classdic.items(),key=itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sortedclassDic[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createDecisionTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet,featnames)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = featnames[:]              &lt;span class=&quot;comment&quot;&gt;################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classlist = [featvec[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featvec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]  &lt;span class=&quot;comment&quot;&gt;#此节点的分类情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; classlist.count(classlist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) == len(classlist):  &lt;span class=&quot;comment&quot;&gt;#全部属于一类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; classlist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(dataSet[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:         &lt;span class=&quot;comment&quot;&gt;#分完了,没有属性了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Vote(classlist)       &lt;span class=&quot;comment&quot;&gt;#少数服从多数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 选择一个最优特征进行划分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeat = chooseBestFeat(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeatname = featname[bestFeat]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt;(featname[bestFeat])     &lt;span class=&quot;comment&quot;&gt;#防止下标不准&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DecisionTree = &amp;#123;bestFeatname:&amp;#123;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 创建分支,先找出所有属性值,即分支数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    allvalue = [vec[bestFeat] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    specvalue = sorted(list(set(allvalue)))  &lt;span class=&quot;comment&quot;&gt;#使有一定顺序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; specvalue:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        copyfeatname = featname[:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DecisionTree[bestFeatname][v] = createDecisionTree(splitDataSet(dataSet,bestFeat,v),copyfeatname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; DecisionTree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\西瓜2.0.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSet,featname = filetoDataSet(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Tree = createDecisionTree(DataSet,featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Tree)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解释一下几个函数：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;filetoDataSet(filename)  将文件中的数据整理成数据集&lt;br&gt;calcEnt(dataSet)     计算香农熵&lt;br&gt;splitDataSet(dataSet, axis, value)     划分数据集，选择出第axis个属性的取值为value的所有数据集，即D^v，并去掉第axis个属性，因为不需要了&lt;br&gt;chooseBestFeat(dataSet)      根据信息增益，选择一个最好的属性&lt;br&gt;Vote(classList)        如果属性用完，类别仍不一致，投票决定&lt;br&gt;createDecisionTree(dataSet,featnames)     递归创建决策树&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用西瓜数据集2.0对算法进行测试，西瓜数据集见 &lt;a href=&quot;http://whatbeg.com/2016/04/22/xiguadataset.html&quot;&gt;西瓜数据集2.0&lt;/a&gt;，输出如下：&lt;br&gt;&lt;figure class=&quot;highlight scheme&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;symbol&quot;&gt;&#39;色泽&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;根蒂&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;敲声&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;纹理&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;脐部&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;纹理&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;清晰&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;根蒂&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;蜷缩&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;硬挺&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;稍蜷&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;色泽&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;青绿&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;乌黑&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;硬滑&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;软粘&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&amp;#125;, &lt;span class=&quot;symbol&quot;&gt;&#39;稍糊&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;硬滑&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;软粘&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;&amp;#125;&amp;#125;, &lt;span class=&quot;symbol&quot;&gt;&#39;模糊&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree1.png-SuoLve.Shuiyin&quot; alt=&quot;决策树算法在西瓜数据集2.0上的结果&quot;&gt;&lt;br&gt;由于数据太少，没有设置测试数据以验证其准确度，但是我后面会根据乳腺癌的例子进行准确度的测试的，下面进入下一部分：&lt;/p&gt;
&lt;h2 id=&quot;有连续值的情况&quot;&gt;&lt;a href=&quot;#有连续值的情况&quot; class=&quot;headerlink&quot; title=&quot;有连续值的情况&quot;&gt;&lt;/a&gt;有连续值的情况&lt;/h2&gt;&lt;p&gt;有连续值的情况如 &lt;a href=&quot;http://whatbeg.com/2016/04/22/xiguadataset.html&quot;&gt;西瓜数据集3.0&lt;/a&gt;&lt;br&gt;一个属性有很多种取值，我们肯定不能每个取值都做一个分支，这时候需要对连续属性进行离散化，有几种方法供选择，其中两种是：&lt;br&gt;1.对每一类别的数据集的连续值取平均值，再取各类的平均值的平均值作为划分点，将连续属性化为两类变成离散属性&lt;br&gt;2.C4.5采用的二分法，排序离散属性，取每两个的中点作为划分点的候选点，计算以每个划分点划分数据集的信息增益，取最大的那个划分点将连续属性化为两类变成离散属性，用该属性进行划分的信息增益就是刚刚计算的最大信息增益。公式如下：&lt;br&gt;$$Gain(D,a) = \max_{t \in T&lt;em&gt;a}Ent(D) - \sum&lt;/em&gt;{\lambda \in {+,-}}{|D_t^\lambda| \over |D|}Ent(D_t^\lambda) $$&lt;br&gt;这里采用第二种，并在学习前对连续属性进行离散化。增加处理的代码如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet_for_dec&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, axis, value, small)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (small &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] &amp;lt;= value) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; ((&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; small) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] &amp;gt; value):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataSetPredo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename,decreteindex)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet,featname = filetoDataSet(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Entropy = calcEnt(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSetlen = len(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; decreteindex:     &lt;span class=&quot;comment&quot;&gt;#对每一个是连续值的属性下标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dataSet[i][index] = float(dataSet[i][index])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allvalue = [vec[index] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sortedallvalue = sorted(allvalue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        T = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(allvalue)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):        &lt;span class=&quot;comment&quot;&gt;#划分点集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            T.append(float(sortedallvalue[i]+sortedallvalue[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestGain = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestpt = &lt;span class=&quot;number&quot;&gt;-1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; pt &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; T:          &lt;span class=&quot;comment&quot;&gt;#对每个划分点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nowent = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; small &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):   &lt;span class=&quot;comment&quot;&gt;#化为正类负类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Dt = splitDataSet_for_dec(dataSet, index, pt, small)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                p = len(Dt) / float(DataSetlen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                nowent += p * calcEnt(Dt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; Entropy - nowent &amp;gt; bestGain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bestGain = Entropy-nowent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bestpt = pt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        featname[index] = str(featname[index]+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;=&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;%.3f&quot;&lt;/span&gt;%bestpt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dataSet[i][index] = &lt;span class=&quot;string&quot;&gt;&quot;是&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dataSet[i][index] &amp;lt;= bestpt &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;否&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出处理过后的属性以及对西瓜数据集3.0的输出&lt;br&gt;&lt;figure class=&quot;highlight scheme&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;symbol&quot;&gt;&#39;色泽&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;根蒂&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;敲声&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;纹理&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;脐部&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;密度&amp;lt;=0.382&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;含糖率&amp;lt;=0.126&lt;/span&gt;&#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;纹理&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;模糊&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;稍糊&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;硬滑&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;软粘&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;&amp;#125;&amp;#125;, &lt;span class=&quot;symbol&quot;&gt;&#39;清晰&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;密度&amp;lt;=0.382&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;主要是预处理函数DataSetPredo，对数据集提前离散化，然后再进行学习，学习代码类似。输出的决策树如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree2.png-SuoLve.Shuiyin&quot; alt=&quot;决策树算法在西瓜数据集3.0上的结果&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;有缺失值的情况&quot;&gt;&lt;a href=&quot;#有缺失值的情况&quot; class=&quot;headerlink&quot; title=&quot;有缺失值的情况&quot;&gt;&lt;/a&gt;有缺失值的情况&lt;/h2&gt;&lt;p&gt;数据有缺失值是常见的情况，我们不好直接抛弃这些数据，因为这样会损失大量数据，不划算，但是缺失值我们也无法判断它的取值。怎么办呢，办法还是有的。&lt;br&gt;考虑两个问题：&lt;br&gt;&lt;strong&gt;1.有缺失值时如何进行划分选择&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.已选择划分属性，有缺失值的样本划不划分，如何划分？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基本思想是进行最优属性选择时，先只考虑无缺失值样本，然后再乘以相应比例，得到在整个样本集上的大致情况。连带考虑到第二个问题的话，考虑给每一个样本一个权重，此时每个样本不再总是被看成一个独立样本，这样有利于第二个问题的解决：即若样本在属性a上的值缺失，那么将其看成是所有值都取，只不过取每个值的权重不一样，每个值的权重参考该值在无缺失值样本中的比例，简单地说，比如在无缺失值样本集中，属性a取去两个值1和2，并且取1的权重和占整个权重和1/3，而取2的权重和占2/3，那么依据该属性对样本集进行划分时，遇到该属性上有缺失值的样本，那么我们认为该样本取值2的可能性更大，于是将该样本的权重乘以2/3归到取值为2的样本集中继续进行划分构造决策树，而乘1/3划到取值为1的样本集中继续构造。不知道我说清楚没有。&lt;/p&gt;
&lt;p&gt;公式如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectreegongshi.png-SuoLve.Shuiyin&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中，D~表示数据集D在属性a上无缺失值的样本，根据它来判断a属性的优劣，rho(即‘lou’)表示属性a的无缺失值样本占所有样本的比例，p~_k表示无缺失值样本中第k类所占的比例，r~_v表示无缺失值样本在属性a上取值为v的样本所占的比例。&lt;br&gt;在划分样本时，如果有缺失值，则将样本划分到所有子节点，在属性a取值v的子节点上的权重为r~_v * 原来的权重。&lt;br&gt;更详细的解读参考《机器学习》P86-87。&lt;br&gt;根据权重法修改后的ID3算法实现如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#修改 treesID3.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; operator &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itemgetter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;filetoDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    all_lines = fr.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = all_lines[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].strip().split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; all_lines[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = line.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lis = line.split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dataSet.append(lis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;calcEnt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, weight)&lt;/span&gt;:&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;#计算权重香农熵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    labelCounts = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label = featVec[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; label &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; labelCounts.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            labelCounts[label] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        labelCounts[label] += weight[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Ent = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; labelCounts.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p_i = float(labelCounts[key]/sum(weight))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Ent -= p_i * log(p_i,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Ent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, weight, axis, value, countmissvalue)&lt;/span&gt;:&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#划分数据集,找出第axis个属性为value的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnweight = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; countmissvalue):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; countmissvalue &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == value:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnweight.append(weight[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet,returnweight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet_for_dec&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, axis, value, small, countmissvalue)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; countmissvalue):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; countmissvalue &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (small &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] &amp;lt;= value) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; ((&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; small) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] &amp;gt; value):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataSetPredo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename,decreteindex)&lt;/span&gt;:&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;#首先运行，权重不变为1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet,featname = filetoDataSet(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSetlen = len(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Entropy = calcEnt(dataSet,[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; decreteindex:     &lt;span class=&quot;comment&quot;&gt;#对每一个是连续值的属性下标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UnmissDatalen = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen):      &lt;span class=&quot;comment&quot;&gt;#字符串转浮点数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dataSet[i][index] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                UnmissDatalen += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dataSet[i][index] = float(dataSet[i][index])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allvalue = [vec[index] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; vec[index] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sortedallvalue = sorted(allvalue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        T = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(allvalue)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):        &lt;span class=&quot;comment&quot;&gt;#划分点集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            T.append(float(sortedallvalue[i]+sortedallvalue[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestGain = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestpt = &lt;span class=&quot;number&quot;&gt;-1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; pt &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; T:          &lt;span class=&quot;comment&quot;&gt;#对每个划分点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nowent = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; small &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):   &lt;span class=&quot;comment&quot;&gt;#化为正类(1)负类(0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Dt = splitDataSet_for_dec(dataSet, index, pt, small, &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                p = len(Dt) / float(UnmissDatalen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                nowent += p * calcEnt(Dt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; Entropy - nowent &amp;gt; bestGain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bestGain = Entropy-nowent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bestpt = pt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        featname[index] = str(featname[index]+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;=&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;%.3f&quot;&lt;/span&gt;%bestpt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dataSet[i][index] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dataSet[i][index] = &lt;span class=&quot;string&quot;&gt;&quot;是&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dataSet[i][index] &amp;lt;= bestpt &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;否&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getUnmissDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, weight, axis)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnweight = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tag = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tag.append(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(weight)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; tag:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnweight.append(weight[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet,returnweight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printlis&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(lis)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(li)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;chooseBestFeat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet,weight,featname)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numFeat = len(dataSet[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSetWeight = sum(weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestGain = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeat = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(numFeat):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UnmissDataSet,Unmissweight = getUnmissDataSet(dataSet, weight, i)   &lt;span class=&quot;comment&quot;&gt;#无缺失值数据集及其权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Entropy = calcEnt(UnmissDataSet,Unmissweight)      &lt;span class=&quot;comment&quot;&gt;#Ent(D~)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allvalue = [featVec[i] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[i] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UnmissSumWeight = sum(Unmissweight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lou = UnmissSumWeight / DataSetWeight        &lt;span class=&quot;comment&quot;&gt;#lou&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        specvalue = set(allvalue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nowEntropy = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; specvalue:      &lt;span class=&quot;comment&quot;&gt;#该属性的几种取值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Dv,weightVec_v = splitDataSet(dataSet,Unmissweight,i,v,&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;#返回 此属性为v的所有样本 以及 每个样本的权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p = sum(weightVec_v) / UnmissSumWeight          &lt;span class=&quot;comment&quot;&gt;#r~_v = D~_v / D~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nowEntropy += p * calcEnt(Dv,weightVec_v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; lou*(Entropy - nowEntropy) &amp;gt; bestGain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestGain = Entropy - nowEntropy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestFeat = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bestFeat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Vote&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(classList,weight)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classdic = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vote &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; classList:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; vote &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; classdic.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            classdic[vote] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classdic[vote] += weight[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sortedclassDic = sorted(classdic.items(),key=itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sortedclassDic[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet_adjustWeight&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet,weight,axis,value,r_v)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnweight = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnweight.append(weight[i] * r_v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; featVec[axis] == value:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnweight.append(weight[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet,returnweight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createDecisionTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet,weight,featnames)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = featnames[:]              &lt;span class=&quot;comment&quot;&gt;################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classlist = [featvec[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featvec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]  &lt;span class=&quot;comment&quot;&gt;#此节点的分类情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; classlist.count(classlist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) == len(classlist):  &lt;span class=&quot;comment&quot;&gt;#全部属于一类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; classlist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(dataSet[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:         &lt;span class=&quot;comment&quot;&gt;#分完了,没有属性了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Vote(classlist,weight)       &lt;span class=&quot;comment&quot;&gt;#少数服从多数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 选择一个最优特征进行划分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeat = chooseBestFeat(dataSet,weight,featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeatname = featname[bestFeat]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt;(featname[bestFeat])     &lt;span class=&quot;comment&quot;&gt;#防止下标不准&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DecisionTree = &amp;#123;bestFeatname:&amp;#123;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 创建分支,先找出所有属性值,即分支数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    allvalue = [vec[bestFeat] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; vec[bestFeat] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    specvalue = sorted(list(set(allvalue)))  &lt;span class=&quot;comment&quot;&gt;#使有一定顺序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UnmissDataSet,Unmissweight = getUnmissDataSet(dataSet, weight, bestFeat)   &lt;span class=&quot;comment&quot;&gt;#无缺失值数据集及其权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UnmissSumWeight = sum(Unmissweight)      &lt;span class=&quot;comment&quot;&gt;# D~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; specvalue:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        copyfeatname = featname[:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Dv,weightVec_v = splitDataSet(dataSet,Unmissweight,bestFeat,v,&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;#返回 此属性为v的所有样本 以及 每个样本的权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r_v = sum(weightVec_v) / UnmissSumWeight          &lt;span class=&quot;comment&quot;&gt;#r~_v = D~_v / D~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sondataSet,sonweight = splitDataSet_adjustWeight(dataSet,weight,bestFeat,v,r_v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DecisionTree[bestFeatname][v] = createDecisionTree(sondataSet,sonweight,copyfeatname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; DecisionTree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\西瓜2.0alpha.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSet,featname = DataSetPredo(filename,[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Tree = createDecisionTree(DataSet,[&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(DataSet))],featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Tree)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有缺失值的情况如 &lt;a href=&quot;http://whatbeg.com/2016/04/22/xiguadataset.html&quot;&gt;西瓜数据集2.0alpha&lt;/a&gt;&lt;br&gt;实验结果：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;纹理&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;模糊&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;色泽&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;青绿&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;浅白&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;乌黑&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;&amp;#125;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&#39;清晰&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;根蒂&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;蜷缩&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;硬挺&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;稍蜷&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;色泽&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;青绿&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;乌黑&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;触感&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;硬滑&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;软粘&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&#39;稍糊&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;敲声&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;浊响&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;脐部&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;凹陷&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;稍凹&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;&amp;#125;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&#39;清脆&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;沉闷&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree3.png&quot; alt=&quot;决策树算法在西瓜数据集2.0$\alpha$上的结果&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;在乳腺癌数据集上的测试与表现&quot;&gt;&lt;a href=&quot;#在乳腺癌数据集上的测试与表现&quot; class=&quot;headerlink&quot; title=&quot;在乳腺癌数据集上的测试与表现&quot;&gt;&lt;/a&gt;在乳腺癌数据集上的测试与表现&lt;/h2&gt;&lt;p&gt;有了算法，我们当然想做一定的测试看一看算法的表现。这里我选择了威斯康辛女性乳腺癌的数据。&lt;/p&gt;
&lt;p&gt;数据总共有9列，每一列分别代表，以逗号分割&lt;br&gt;1 Sample code number （病人ID）&lt;br&gt;2 Clump Thickness 肿块厚度&lt;br&gt;3 Uniformity of Cell Size 细胞大小的均匀性&lt;br&gt;4 Uniformity of Cell Shape 细胞形状的均匀性&lt;br&gt;5 Marginal Adhesion 边缘粘&lt;br&gt;6 Single Epithelial Cell Size 单上皮细胞的大小&lt;br&gt;7 Bare Nuclei 裸核&lt;br&gt;8 Bland Chromatin 乏味染色体&lt;br&gt;9 Normal Nucleoli 正常核&lt;br&gt;10 Mitoses 有丝分裂&lt;br&gt;11 Class: 2 for benign, 4 formalignant（恶性或良性分类）&lt;br&gt;[from Toby]&lt;br&gt;总共700条左右的数据，选取最后80条作为测试集，前面作为训练集，进行学习。&lt;br&gt;使用分类器的代码如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; treesID3 &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; id3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; treePlot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; tpl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pickle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;classify&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tree, featnames, X)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classLabel = &lt;span class=&quot;string&quot;&gt;&quot;未知&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root = list(Tree.keys())[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstGen = Tree[root]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featindex = featnames.index(root)  &lt;span class=&quot;comment&quot;&gt;#根节点的属性下标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; firstGen.keys():   &lt;span class=&quot;comment&quot;&gt;#根属性的取值,取哪个就走往哪颗子树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; X[featindex] == key:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; type(firstGen[key]) == type(&amp;#123;&amp;#125;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                classLabel = classify(firstGen[key],featnames,X)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                classLabel = firstGen[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; classLabel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StoreTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tree,filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;wb&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pickle.dump(Tree,fw)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReadTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;rb&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pickle.load(fr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\breastcancer.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet,featnames = id3.DataSetPredo(filename,[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Tree = id3.createDecisionTree(dataSet[:&lt;span class=&quot;number&quot;&gt;620&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(dataSet))],featnames)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tpl.createPlot(Tree)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    storetree = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\decTree.dect&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    StoreTree(Tree,storetree)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#Tree = ReadTree(storetree)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cnt = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; lis &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet[&lt;span class=&quot;number&quot;&gt;620&lt;/span&gt;:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        judge = classify(Tree,featnames,lis[:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shouldbe = lis[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; judge == shouldbe:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cnt += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;Test %d was classified %s, it&#39;s class is %s %s&quot;&lt;/span&gt; %(i,judge,shouldbe,&lt;span class=&quot;string&quot;&gt;&quot;=====&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; judge==shouldbe &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;The Tree&#39;s Accuracy is %.3f&quot;&lt;/span&gt; % (cnt / float(i)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结果（点击右键看大图）&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree4.png&quot; alt=&quot;在乳腺癌数据上构建决策树&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/canceroutput.png&quot; alt=&quot;测试结果&quot;&gt;&lt;br&gt;正确率约为96%左右，算是不差的分类器了。&lt;br&gt;我的乳腺癌数据见：&lt;a href=&quot;http://7xt9qk.com2.z0.glb.clouddn.com/breastcancer.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;乳腺癌数据&lt;/a&gt;&lt;br&gt;至此，决策树算法ID3的实现完毕，下面考虑基于基尼指数和信息增益率进行划分选择，以及考虑实现剪枝过程，因为我们可以看到上面训练出的决策树还存在着很多冗余分支，是因为实现过程中，由于数据量太大，每个分支都不完全纯净，所以会创建往下的分支，但是分支投票的结果又是一致的，而且数据量再大，特征数再多的话，决策树会非常大非常复杂，所以剪枝一般是必做的一步。剪枝分为先剪枝和后剪枝，如果细说的话可以写很多了。&lt;br&gt;利用matplotlib画决策树的代码见&lt;a href=&quot;http://whatbeg.com/2016/04/23/matplotlib-desiciontree.html&quot;&gt;利用matplotlib画决策树&lt;/a&gt;&lt;br&gt;此文亦可见：&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5424890.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Here&lt;/a&gt;&lt;br&gt;MathJax的一些使用方法见&lt;a href=&quot;http://iori.sinaapp.com/17.html/comment-page-1?replytocom=2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1&lt;/a&gt;&lt;a href=&quot;http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2&lt;/a&gt;&lt;a href=&quot;http://www.ibiblio.org/koine/greek/lessons/alphabet.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3&lt;/a&gt;&lt;br&gt;参考资料：《机器学习》《机器学习实战》通过本次实战也发现了这两本书中的一些错误之处。&lt;br&gt;lz初学机器学习不久，如有错漏之处请多包涵指出或者各位有什么想法或意见欢迎评论去告诉我:-)&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文对决策树算法进行简单的总结和梳理，并对著名的决策树算法ID3(Iterative Dichotomiser 迭代二分器)进行实现，实现采用Python语言，一句老梗，“人生苦短，我用Python”，Python确实能够省很多语言方面的事，从而可以让我们专注于问题和解决问
    
    </summary>
    
      <category term="机器学习" scheme="http://whatbeg.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>利用matplotlib画决策树</title>
    <link href="http://whatbeg.com/2016/04/23/matplotlib-desiciontree.html"/>
    <id>http://whatbeg.com/2016/04/23/matplotlib-desiciontree.html</id>
    <published>2016-04-23T12:05:51.000Z</published>
    <updated>2016-04-23T12:39:13.870Z</updated>
    
    <content type="html">&lt;p&gt;利用matplotlib进行决策树可视化&lt;br&gt;代码来源于《机器学习实战》，具体讲解可参见这本书。&lt;br&gt;部分代码解释可见&lt;a href=&quot;http://www.cnblogs.com/fantasy01/p/4595902.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;br&gt;讲的比较清楚。&lt;/p&gt;
&lt;p&gt;treePlot.py&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pylab &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; treesID3 &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; decTree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mpl.rcParams[&lt;span class=&quot;string&quot;&gt;&#39;font.sans-serif&#39;&lt;/span&gt;] = [&lt;span class=&quot;string&quot;&gt;&#39;SimHei&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;decNode = dict(boxstyle=&lt;span class=&quot;string&quot;&gt;&quot;sawtooth&quot;&lt;/span&gt;,fc=&lt;span class=&quot;string&quot;&gt;&#39;0.8&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;leafNode = dict(boxstyle=&lt;span class=&quot;string&quot;&gt;&quot;round4&quot;&lt;/span&gt;,fc=&lt;span class=&quot;string&quot;&gt;&#39;0.8&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arrow_args = dict(arrowstyle=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;-&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;plotNode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(nodeTxt, centerPt, fatherPt, nodeType)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    createPlot.ax1.annotate(nodeTxt, xy=fatherPt, xycoords=&lt;span class=&quot;string&quot;&gt;&#39;axes fraction&#39;&lt;/span&gt;, xytext=centerPt, textcoords = &lt;span class=&quot;string&quot;&gt;&#39;axes fraction&#39;&lt;/span&gt;, va=&lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;, ha=&lt;span class=&quot;string&quot;&gt;&#39;center&#39;&lt;/span&gt;, bbox=nodeType, arrowprops=arrow_args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getNumLeafs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tree)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root = list(Tree.keys())[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstGen = Tree[root]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; firstGen.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; type(firstGen[key]) == type(&amp;#123;&amp;#125;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num += getNumLeafs(firstGen[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DepthofTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tree)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxdepth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root = list(Tree.keys())[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstGen = Tree[root]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; firstGen.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; type(firstGen[key]) == type(&amp;#123;&amp;#125;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            depth = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + DepthofTree(firstGen[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            depth = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; depth &amp;gt; maxdepth:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maxdepth = depth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; maxdepth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;plotMidText&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(nowPt, fatherPt, txt)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xMid = (fatherPt[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]-nowPt[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; + nowPt[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    yMid = (fatherPt[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]-nowPt[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; + nowPt[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    createPlot.ax1.text(xMid,yMid,txt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;plotTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tree, fatherPt, nodeTxt)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numLeafs = getNumLeafs(Tree)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    depth = DepthofTree(Tree)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root = list(Tree.keys())[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nowPt = (plotTree.xoff + (&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; + float(numLeafs))/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;/plotTree.totalW, plotTree.yoff)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotMidText(nowPt,fatherPt,nodeTxt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotNode(root, nowPt, fatherPt, decNode)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstGen = Tree[root]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotTree.yoff = plotTree.yoff - &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;/plotTree.totalD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; firstGen.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; type(firstGen[key]) == type(&amp;#123;&amp;#125;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            plotTree(firstGen[key], nowPt, str(key))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            plotTree.xoff = plotTree.xoff + &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;/plotTree.totalW&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            plotNode(firstGen[key], (plotTree.xoff, plotTree.yoff), nowPt, leafNode)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            plotMidText((plotTree.xoff, plotTree.yoff), nowPt, str(key))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotTree.yoff = plotTree.yoff + &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;/plotTree.totalD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createPlot&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tree)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fig = plt.figure(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, facecolor=&lt;span class=&quot;string&quot;&gt;&#39;white&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fig.clf()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    axprops = dict(xticks=[],yticks=[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    createPlot.ax1 = plt.subplot(&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;,frameon=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;,**axprops)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotTree.totalW = float(getNumLeafs(Tree))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotTree.totalD = float(DepthofTree(Tree)) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotTree.xoff = &lt;span class=&quot;number&quot;&gt;-1.0&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; / plotTree.totalW    &lt;span class=&quot;comment&quot;&gt;# 1分成2倍叶子数那么多份&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotTree.yoff = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plotTree(Tree, (&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    plt.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\西瓜2.0.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSet,featname = decTree.filetoDataSet(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Tree = decTree.createDecisionTree(DataSet,featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Tree)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    createPlot(Tree)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;利用matplotlib进行决策树可视化&lt;br&gt;代码来源于《机器学习实战》，具体讲解可参见这本书。&lt;br&gt;部分代码解释可见&lt;a href=&quot;http://www.cnblogs.com/fantasy01/p/4595902.html&quot; target=&quot;_blank&quot; re
    
    </summary>
    
      <category term="机器学习" scheme="http://whatbeg.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>《机器学习》西瓜数据集汇总</title>
    <link href="http://whatbeg.com/2016/04/22/xiguadataset.html"/>
    <id>http://whatbeg.com/2016/04/22/xiguadataset.html</id>
    <published>2016-04-22T08:47:11.000Z</published>
    <updated>2016-04-22T08:48:09.944Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-西瓜数据集2-0&quot;&gt;&lt;a href=&quot;#1-西瓜数据集2-0&quot; class=&quot;headerlink&quot; title=&quot;1.西瓜数据集2.0&quot;&gt;&lt;/a&gt;1.&lt;a href=&quot;http://7xt9qk.com2.z0.glb.clouddn.com/%E8%A5%BF%E7%93%9C2.0.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;西瓜数据集2.0&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编号,色泽,根蒂,敲声,纹理,脐部,触感,好瓜&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1,青绿,蜷缩,浊响,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2,乌黑,蜷缩,沉闷,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3,乌黑,蜷缩,浊响,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4,青绿,蜷缩,沉闷,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5,浅白,蜷缩,浊响,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6,青绿,稍蜷,浊响,清晰,稍凹,软粘,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7,乌黑,稍蜷,浊响,稍糊,稍凹,软粘,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8,乌黑,稍蜷,浊响,清晰,稍凹,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9,乌黑,稍蜷,沉闷,稍糊,稍凹,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10,青绿,硬挺,清脆,清晰,平坦,软粘,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11,浅白,硬挺,清脆,模糊,平坦,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12,浅白,蜷缩,浊响,模糊,平坦,软粘,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13,青绿,稍蜷,浊响,稍糊,凹陷,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14,浅白,稍蜷,沉闷,稍糊,凹陷,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15,乌黑,稍蜷,浊响,清晰,稍凹,软粘,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16,浅白,蜷缩,浊响,模糊,平坦,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17,青绿,蜷缩,沉闷,稍糊,稍凹,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-西瓜数据集2-0-alpha&quot;&gt;&lt;a href=&quot;#2-西瓜数据集2-0-alpha&quot; class=&quot;headerlink&quot; title=&quot;2.西瓜数据集2.0$\alpha$&quot;&gt;&lt;/a&gt;2.&lt;a href=&quot;http://7xt9qk.com2.z0.glb.clouddn.com/%E8%A5%BF%E7%93%9C2.0alpha.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;西瓜数据集2.0$\alpha$&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编号,色泽,根蒂,敲声,纹理,脐部,触感,好瓜&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1,?,蜷缩,浊响,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2,乌黑,蜷缩,沉闷,清晰,凹陷,?,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3,乌黑,蜷缩,?,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4,青绿,蜷缩,沉闷,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5,?,蜷缩,浊响,清晰,凹陷,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6,青绿,稍蜷,浊响,清晰,?,软粘,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7,乌黑,稍蜷,浊响,稍糊,稍凹,软粘,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8,乌黑,稍蜷,浊响,?,稍凹,硬滑,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9,乌黑,?,沉闷,稍糊,稍凹,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10,青绿,硬挺,清脆,?,平坦,软粘,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11,浅白,硬挺,清脆,模糊,平坦,?,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12,浅白,蜷缩,?,模糊,平坦,软粘,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13,?,稍蜷,浊响,稍糊,凹陷,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14,浅白,稍蜷,沉闷,稍糊,凹陷,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15,乌黑,稍蜷,浊响,清晰,?,软粘,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16,浅白,蜷缩,浊响,模糊,平坦,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17,青绿,?,沉闷,稍糊,稍凹,硬滑,否&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-西瓜数据集3-0&quot;&gt;&lt;a href=&quot;#3-西瓜数据集3-0&quot; class=&quot;headerlink&quot; title=&quot;3.西瓜数据集3.0&quot;&gt;&lt;/a&gt;3.&lt;a href=&quot;http://7xt9qk.com2.z0.glb.clouddn.com/%E8%A5%BF%E7%93%9C3.0.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;西瓜数据集3.0&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;编号,色泽,根蒂,敲声,纹理,脐部,触感,密度,含糖率,好瓜&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1,青绿,蜷缩,浊响,清晰,凹陷,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.697&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.460&lt;/span&gt;,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2,乌黑,蜷缩,沉闷,清晰,凹陷,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.774&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.376&lt;/span&gt;,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3,乌黑,蜷缩,浊响,清晰,凹陷,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.634&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.264&lt;/span&gt;,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4,青绿,蜷缩,沉闷,清晰,凹陷,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.608&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.318&lt;/span&gt;,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5,浅白,蜷缩,浊响,清晰,凹陷,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.556&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.215&lt;/span&gt;,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6,青绿,稍蜷,浊响,清晰,稍凹,软粘,0&lt;span class=&quot;selector-class&quot;&gt;.403&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.237&lt;/span&gt;,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7,乌黑,稍蜷,浊响,稍糊,稍凹,软粘,0&lt;span class=&quot;selector-class&quot;&gt;.481&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.149&lt;/span&gt;,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8,乌黑,稍蜷,浊响,清晰,稍凹,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.437&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.211&lt;/span&gt;,是&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9,乌黑,稍蜷,沉闷,稍糊,稍凹,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.666&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.091&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10,青绿,硬挺,清脆,清晰,平坦,软粘,0&lt;span class=&quot;selector-class&quot;&gt;.243&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.267&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11,浅白,硬挺,清脆,模糊,平坦,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.245&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.057&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12,浅白,蜷缩,浊响,模糊,平坦,软粘,0&lt;span class=&quot;selector-class&quot;&gt;.343&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.099&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13,青绿,稍蜷,浊响,稍糊,凹陷,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.639&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.161&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14,浅白,稍蜷,沉闷,稍糊,凹陷,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.657&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.198&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15,乌黑,稍蜷,浊响,清晰,稍凹,软粘,0&lt;span class=&quot;selector-class&quot;&gt;.360&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.370&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16,浅白,蜷缩,浊响,模糊,平坦,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.593&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.042&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17,青绿,蜷缩,沉闷,稍糊,稍凹,硬滑,0&lt;span class=&quot;selector-class&quot;&gt;.719&lt;/span&gt;,0&lt;span class=&quot;selector-class&quot;&gt;.103&lt;/span&gt;,否&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;4-西瓜数据集3-0-alpha&quot;&gt;&lt;a href=&quot;#4-西瓜数据集3-0-alpha&quot; class=&quot;headerlink&quot; title=&quot;4.西瓜数据集3.0$\alpha$&quot;&gt;&lt;/a&gt;4.&lt;a href=&quot;http://7xt9qk.com2.z0.glb.clouddn.com/%E8%A5%BF%E7%93%9C3.0alpha.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;西瓜数据集3.0$\alpha$&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;密度 含糖率 好瓜&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.697&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.460&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.774&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.376&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.634&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.264&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.608&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.318&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.556&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.215&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.403&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.237&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.481&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.149&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.437&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.211&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.666&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.091&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.243&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.267&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.245&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.057&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.343&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.099&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.639&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.161&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.657&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.198&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.360&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.370&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.593&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.042&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.719&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.103&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-西瓜数据集2-0&quot;&gt;&lt;a href=&quot;#1-西瓜数据集2-0&quot; class=&quot;headerlink&quot; title=&quot;1.西瓜数据集2.0&quot;&gt;&lt;/a&gt;1.&lt;a href=&quot;http://7xt9qk.com2.z0.glb.clouddn.com/%E8%A5%
    
    </summary>
    
      <category term="机器学习" scheme="http://whatbeg.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客Jacman主题的一些优化  --本博客4月20日优化</title>
    <link href="http://whatbeg.com/2016/04/20/blogopt420.html"/>
    <id>http://whatbeg.com/2016/04/20/blogopt420.html</id>
    <published>2016-04-20T05:37:17.000Z</published>
    <updated>2016-04-20T05:47:41.848Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-新增博客访问量统计和文章访问量统计&quot;&gt;&lt;a href=&quot;#1-新增博客访问量统计和文章访问量统计&quot; class=&quot;headerlink&quot; title=&quot;1.新增博客访问量统计和文章访问量统计&quot;&gt;&lt;/a&gt;1.新增博客访问量统计和文章访问量统计&lt;/h2&gt;&lt;h3 id=&quot;采用-不蒜子-极简计数器&quot;&gt;&lt;a href=&quot;#采用-不蒜子-极简计数器&quot; class=&quot;headerlink&quot; title=&quot;采用 不蒜子 极简计数器&quot;&gt;&lt;/a&gt;采用 &lt;a href=&quot;http://service.ibruce.info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不蒜子&lt;/a&gt; 极简计数器&lt;/h3&gt;&lt;p&gt;在 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;themes/你的主题/layout/_partial/footer.ejs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;中最后面添加脚本：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加总pv计数和总uv计数&quot;&gt;&lt;a href=&quot;#添加总pv计数和总uv计数&quot; class=&quot;headerlink&quot; title=&quot;添加总pv计数和总uv计数&quot;&gt;&lt;/a&gt;添加总pv计数和总uv计数&lt;/h3&gt;&lt;p&gt;在上面footer.ejs文件最后添加这两个计数脚本：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span id=&quot;busuanzi_container_site_pv&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;nbsp;&amp;amp;nbsp;Total visits:&amp;amp;nbsp;&amp;lt;span id=&quot;busuanzi_value_site_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span id=&quot;busuanzi_container_site_uv&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;amp;nbsp;&amp;amp;nbsp;You are Visiter No.&amp;lt;span id=&quot;busuanzi_value_site_uv&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加文章访问计数&quot;&gt;&lt;a href=&quot;#添加文章访问计数&quot; class=&quot;headerlink&quot; title=&quot;添加文章访问计数&quot;&gt;&lt;/a&gt;添加文章访问计数&lt;/h3&gt;&lt;p&gt;这里我添加到标题右下方，正文上面的地方。&lt;br&gt;在&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;themes\jacman\layout_partial\post\header.ejs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;中，&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;class=&quot;article-time&quot;&gt;``` 标签里面添加：&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;``` javascript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span id=&amp;quot;busuanzi_container_page_pv&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    总阅读&amp;lt;span id=&amp;quot;busuanzi_value_page_pv&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即可。&lt;/p&gt;
&lt;h2 id=&quot;2-添加“热评文章”侧边栏&quot;&gt;&lt;a href=&quot;#2-添加“热评文章”侧边栏&quot; class=&quot;headerlink&quot; title=&quot;2.添加“热评文章”侧边栏&quot;&gt;&lt;/a&gt;2.添加“热评文章”侧边栏&lt;/h2&gt;&lt;p&gt;由于hexo没有内置诸如“热评文章”，“最新评论”等的widget，那么只能自定义widget,仿照其他的widget，在themes的_config.yml文件中的widgets下添加自定义widget的名称，如下面我添加了一个hot：&lt;br&gt;&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#### Widgets&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;widgets: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; github-card&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; category&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; archive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; tagcloud&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; links&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; rss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; weibo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; hot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  ## provide eight widgets:github-card,category,tag,rss,archive,tagcloud,links,weibo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;D:\hexo\themes\jacman\layout_widget&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目录下新建一个hot.ejs，在多说-&amp;gt;后台管理-&amp;gt;工具-&amp;gt;热评文章中获取代码，写到hot.ejs文件中，然后在其上面写上名字“热评文章”，class=asidetitle。如下：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;asidetitle&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;热评文章&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ds-top-threads&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-range&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;monthly&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-num-items&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; duoshuoQuery = &amp;#123;short_name:&lt;span class=&quot;string&quot;&gt;&quot;whatbeg&quot;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ds = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ds.type = &lt;span class=&quot;string&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;;ds.async = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ds.src = (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.location.protocol == &lt;span class=&quot;string&quot;&gt;&#39;https:&#39;&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&#39;https:&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;http:&#39;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;//static.duoshuo.com/embed.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ds.charset = &lt;span class=&quot;string&quot;&gt;&#39;UTF-8&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;head&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 || &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]).appendChild(ds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说公共JS代码 end --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即可。&lt;/p&gt;
&lt;h2 id=&quot;分类优化&quot;&gt;&lt;a href=&quot;#分类优化&quot; class=&quot;headerlink&quot; title=&quot;分类优化&quot;&gt;&lt;/a&gt;分类优化&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.分类中含有诸如‘&amp;amp;’的特殊字符时，atom.xml文件就会报错，所以分类名尽量不要用此等特殊字符。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.Jacman主题不支持多分类，如果在文章的md文件中想如此将文章加到多个分类中：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;date:&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;categories:&lt;/span&gt; [A,B]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么在categories文件夹中会创建A分类和A\B分类，B分类目录是A分类目录的子目录，所以如果下一篇文章不是上述这样分类但是又有B时，如：&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;date:&lt;/span&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;categories:&lt;/span&gt; B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样又会创建一个跟A同目录的B分类文件夹，这里的B不等于上述的A\B，所以在侧边栏显示分类的时候就会显示两个B分类，显然违背了我们这样做的初衷。&lt;br&gt;解决方法有两个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.改进此主题&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.尽量只将文章分到一个类别&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-新增博客访问量统计和文章访问量统计&quot;&gt;&lt;a href=&quot;#1-新增博客访问量统计和文章访问量统计&quot; class=&quot;headerlink&quot; title=&quot;1.新增博客访问量统计和文章访问量统计&quot;&gt;&lt;/a&gt;1.新增博客访问量统计和文章访问量统计&lt;/h2&gt;&lt;h3 i
    
    </summary>
    
      <category term="错误解决或优化" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%88%96%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="hexo" scheme="http://whatbeg.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>kNN分类器在西瓜数据集3.0$\alpha$上的结果</title>
    <link href="http://whatbeg.com/2016/04/19/knn1.html"/>
    <id>http://whatbeg.com/2016/04/19/knn1.html</id>
    <published>2016-04-19T12:45:57.000Z</published>
    <updated>2016-04-19T15:14:34.510Z</updated>
    
    <content type="html">&lt;h2 id=&quot;kNN分类算法&quot;&gt;&lt;a href=&quot;#kNN分类算法&quot; class=&quot;headerlink&quot; title=&quot;kNN分类算法&quot;&gt;&lt;/a&gt;kNN分类算法&lt;/h2&gt;&lt;p&gt;一种常用的监督学习算法，k-Nearest Neighbor，k-近邻算法。算法思想如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;选定参数k，对于样本X，选取距离X最近的k个样本，取这k个样本出现最多的类别作为预测的此类类别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;它没有显式的训练过程，有数据就可以开始进行测试或者预测了，是一种“懒惰学习”算法。&lt;br&gt;距离计算采用欧式距离，计算两个二维向量的距离：&lt;br&gt;$$d=\sqrt{(xA_0-xB_0)^2+(xA_1-xB_1)^2}$$&lt;/p&gt;
&lt;h2 id=&quot;西瓜数据集3-0-alpha-：&quot;&gt;&lt;a href=&quot;#西瓜数据集3-0-alpha-：&quot; class=&quot;headerlink&quot; title=&quot;西瓜数据集3.0$\alpha$：&quot;&gt;&lt;/a&gt;西瓜数据集3.0$\alpha$：&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;密度 含糖率 好瓜&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.697&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.460&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.774&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.376&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.634&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.264&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.608&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.318&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.556&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.215&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.403&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.237&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.481&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.149&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.437&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.211&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.666&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.091&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.243&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.267&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.245&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.057&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.343&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.099&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.639&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.161&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.657&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.198&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.360&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.370&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.593&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.042&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;span class=&quot;selector-class&quot;&gt;.719&lt;/span&gt; 0&lt;span class=&quot;selector-class&quot;&gt;.103&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;kNN分类器&quot;&gt;&lt;a href=&quot;#kNN分类器&quot; class=&quot;headerlink&quot; title=&quot;kNN分类器&quot;&gt;&lt;/a&gt;kNN分类器&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; operator &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itemgetter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;file2matrix&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;#数据从文本导入矩阵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    file = open(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    arraylines = file.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numberoflines = len(arraylines) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnMat = zeros((numberoflines,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))    &lt;span class=&quot;comment&quot;&gt;#创建行数为numberoflines,列数为2的矩阵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classLabel = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; arraylines[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = line.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lis = line.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        returnMat[index,:] = lis[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classLabel.append(int(lis[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;])+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;#是为2类,否为1类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnMat,classLabel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;         &lt;span class=&quot;comment&quot;&gt;#数据生成测试，忽略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    group = array([[&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    labels = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; group,labels&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;classify0&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(inX, dataSet, labels, k)&lt;/span&gt;:&lt;/span&gt;         &lt;span class=&quot;comment&quot;&gt;# kNN分类器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSetSize = dataSet.shape[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]              &lt;span class=&quot;comment&quot;&gt;# shape[0]表行数,如果是二维数组,则shape[1]表列数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    diffMat = tile(inX, (dataSetSize,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)) - dataSet  &lt;span class=&quot;comment&quot;&gt;# tile(A,(a,b)): 将数组A垂直重复a次,水平重复b次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sqdiffMat = diffMat ** &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;                    &lt;span class=&quot;comment&quot;&gt;#距离平方&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sqDistance = sqdiffMat.sum(axis=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)          &lt;span class=&quot;comment&quot;&gt;#距离相加,axis=0表按列求和,axis=1表按行求和&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dis = sqDistance ** &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sortedDisIndex = dis.argsort()              &lt;span class=&quot;comment&quot;&gt;#排序,argsort():排序后的数据原来的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classCount = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(k):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        voteLabel = labels[sortedDisIndex[i]]   &lt;span class=&quot;comment&quot;&gt;# 根据i处的数据原来的位置找到其类别&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classCount[voteLabel] = classCount.get(voteLabel,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sortedclassCount = sorted(classCount.items(),key=itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sortedclassCount[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]               &lt;span class=&quot;comment&quot;&gt;# 出现次数最多的类为预测类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ClassTest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;                &lt;span class=&quot;comment&quot;&gt;#测试&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testratio = &lt;span class=&quot;number&quot;&gt;0.15&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;#测试数据比例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataMat,Labels = file2matrix(&lt;span class=&quot;string&quot;&gt;&#39;D:\\MLinAction\\Data\\xiguaalpha.txt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    m = DataMat.shape[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]    &lt;span class=&quot;comment&quot;&gt;#数据组数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numTest = int(m*testratio)  &lt;span class=&quot;comment&quot;&gt;#测试数据组数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    errorCount = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(numTest):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classifierRes = classify0(DataMat[i,:],DataMat[numTest:m,:],Labels[numTest:m],&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;分类器分类为: %d, 真实分类为 %d&quot;&lt;/span&gt; %(classifierRes,Labels[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; classifierRes != Labels[i]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              errorCount += &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;错误率: %.5f&quot;&lt;/span&gt; %(errorCount/float(numTest)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClassTest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;group,labels = file2matrix(&lt;span class=&quot;string&quot;&gt;&#39;D:\\MLinAction\\Data\\xiguaalpha.txt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.scatter(group[:,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],group[:,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;],&lt;span class=&quot;number&quot;&gt;35.0&lt;/span&gt;*array(labels),&lt;span class=&quot;number&quot;&gt;35.0&lt;/span&gt;*array(labels))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;测试结果&quot;&gt;&lt;a href=&quot;#测试结果&quot; class=&quot;headerlink&quot; title=&quot;测试结果&quot;&gt;&lt;/a&gt;测试结果&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;分类器分类为: 2, 真实分类为 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;分类器分类为: 2, 真实分类为 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;错误率: 0&lt;span class=&quot;selector-class&quot;&gt;.00000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/xigua1.png&quot; alt=&quot;图1&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;参考文献：&lt;br&gt;《机器学习》&lt;br&gt;《机器学习实战》&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;kNN分类算法&quot;&gt;&lt;a href=&quot;#kNN分类算法&quot; class=&quot;headerlink&quot; title=&quot;kNN分类算法&quot;&gt;&lt;/a&gt;kNN分类算法&lt;/h2&gt;&lt;p&gt;一种常用的监督学习算法，k-Nearest Neighbor，k-近邻算法。算法思想如下：&lt;/p&gt;

    
    </summary>
    
      <category term="机器学习" scheme="http://whatbeg.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【模拟登录】(二) 加密与重放方式登录 -以模拟登录博客园为例</title>
    <link href="http://whatbeg.com/2016/04/14/logincnblogs.html"/>
    <id>http://whatbeg.com/2016/04/14/logincnblogs.html</id>
    <published>2016-04-14T07:37:53.000Z</published>
    <updated>2016-04-27T01:40:51.163Z</updated>
    
    <content type="html">&lt;p&gt;Python模拟登录第一弹见：&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5320666.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python数据分析】Python模拟登录(一) requests.Session应用&lt;/a&gt;&lt;br&gt;上次的登录是最基本的，全部是明文，而且在浏览器中就可以看到POST的数据。接下来我们来个稍微难一点的–模拟登录博客园(&lt;a href=&quot;http://www.cnblogs.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com&lt;/a&gt;)&lt;/p&gt;
&lt;h4 id=&quot;登录特点&quot;&gt;&lt;a href=&quot;#登录特点&quot; class=&quot;headerlink&quot; title=&quot;登录特点&quot;&gt;&lt;/a&gt;登录特点&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;用户名密码都进行了RSA加密，且在浏览器中无法看到POST数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/browsercant.png&quot; alt=&quot;图1&quot;&gt;&lt;br&gt;如上图，在post数据中不能显式看到POST内容。&lt;/p&gt;
&lt;h4 id=&quot;模拟登录步骤&quot;&gt;&lt;a href=&quot;#模拟登录步骤&quot; class=&quot;headerlink&quot; title=&quot;模拟登录步骤&quot;&gt;&lt;/a&gt;模拟登录步骤&lt;/h4&gt;&lt;p&gt;既然浏览器调试功能无法探测到POST数据，那么采用Fiddler试试看，这是一款网络抓包工具，很好用。登录后看到&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/filder.png&quot; alt=&quot;图2&quot;&gt;&lt;br&gt;POST的数据是input1,input2和remember，这和分析signin页面的源代码所得结果一致。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/htmlinput1.png&quot; alt=&quot;图3&quot;&gt;&lt;br&gt;其中input1是加过密的用户名，input2是加过密的密码，remember表示记住还是不记住用户名。由于RSA的原理，加过密后的内容可以不一样，但是解密后的数据是一样的，那么我们就可以采用重放方式登录，即复制这些内容到我们的POST data中。&lt;br&gt;还要注意一个cookies的问题，cookies一定要选择正确，不要选下面的：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/cookie1.png&quot; alt=&quot;图4&quot;&gt;&lt;br&gt;因为这是登录页面的cookies，我们要用下面的cookies：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/cookie2.png&quot; alt=&quot;图5&quot;&gt;，即包含.CNBlogCookies的cookie，这也是主页的cookies。&lt;br&gt;为了验证登录是否成功，我们登录后打开followers页面，因为未登录前是无法看到任何用户的粉丝页面的。&lt;br&gt;还是利用requests.Session，写出如下代码：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = requests.Session()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;headers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;Accept&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;application/json, text/javascript, */*; q=0.01&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;Referer&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;http://passport.cnblogs.com/user/signin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;Cookie&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;__gads=ID=fc58354935efbd89:T=1458638388:S=ALNI_MYEtsucyem4nWeL9mdxvQmfAZlTgQ; _ga=GA1.2.111229817.1458781632; .CNBlogsCookie=39EB7C846FF5A6CA5D762D210B954E55CE77A24D11C5203F6055DCAC93DFFF8EA7E405568F2D8CC9F00AFE43A859E71DE55AE6E79A030F7E74C231CECF7DA2DD88B734EA2ECA22DFED8C2ECAB85717B45434AABFE1202DA8266C7440562114D99D9C6767&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;login_data = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;input1&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;你的用户名加密后内容&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&#39;input2&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;你的密码加密后内容&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&#39;remember&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;false&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url = &lt;span class=&quot;string&quot;&gt;&#39;http://passport.cnblogs.com/user/signin&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req = s.post(url, data = login_data, headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(req.status_code)           &lt;span class=&quot;comment&quot;&gt;#200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(req.content.decode())      &lt;span class=&quot;comment&quot;&gt;#&amp;#123;&quot;success&quot;:false,&quot;message&quot;:&quot;您已处于登录状态&quot;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = s.get(&lt;span class=&quot;string&quot;&gt;&#39;http://home.cnblogs.com/u/whatbeg/followers/1&#39;&lt;/span&gt;, headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(f.status_code)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(f.text)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后运行有：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/alreadysigned.png&quot; alt=&quot;图6&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/signed.png&quot; alt=&quot;图7&quot;&gt;&lt;br&gt;显示成功登录。&lt;br&gt;这样，就可以登录这种用RSA加密的用户名密码的非https且不需要验证码的网站了。希望对需要的人有所帮助。&lt;/p&gt;
&lt;p&gt;&lt;font size=&quot;1&quot;&gt;本文工作仅供交流学习用，请勿利用做出任何不遵守网络公德的行为。&lt;/font&gt;&lt;br&gt;原文地址：&lt;a href=&quot;http://whatbeg.com/2016/04/14/logincnblogs.html&quot;&gt;http://whatbeg.com/2016/04/14/logincnblogs.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Python模拟登录第一弹见：&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5320666.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python数据分析】Python模拟登录(一) requests.
    
    </summary>
    
      <category term="数据挖掘分析与可视化" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="Web" scheme="http://whatbeg.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>【数据分析】四级成绩分布 -matplotlib,xlrd模块使用</title>
    <link href="http://whatbeg.com/2016/04/14/cet4.html"/>
    <id>http://whatbeg.com/2016/04/14/cet4.html</id>
    <published>2016-04-14T03:20:49.000Z</published>
    <updated>2016-04-27T01:40:45.218Z</updated>
    
    <content type="html">&lt;p&gt;最近获得了一些四级成绩数据，大概500多个，于是突发奇想是否能够看看这些成绩数据是否满足所谓的正态分布呢？说干就干，于是有了这篇文章。&lt;br&gt;文章顺带介绍了xlrd模块的一些用法和matplotlib画自定义数据的条形图和随机的条形图的一些方法，并且提供了一些相关链接，可作为学习matplotlib和numpy的资源，希望对读者也有帮助。&lt;/p&gt;
&lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Python 3.5&lt;/li&gt;
&lt;li&gt;xlrd模块&lt;/li&gt;
&lt;li&gt;numpy模块及一些依赖模块（安装请自行查询方法，绝大部分pip就可搞定）&lt;/li&gt;
&lt;li&gt;matplotlib绘图模块&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;xlrd基本用法&quot;&gt;&lt;a href=&quot;#xlrd基本用法&quot; class=&quot;headerlink&quot; title=&quot;xlrd基本用法&quot;&gt;&lt;/a&gt;xlrd基本用法&lt;/h2&gt;&lt;h4 id=&quot;1、导入模块&quot;&gt;&lt;a href=&quot;#1、导入模块&quot; class=&quot;headerlink&quot; title=&quot;1、导入模块&quot;&gt;&lt;/a&gt;1、导入模块&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xlrd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2、打开Excel文件读取数据&quot;&gt;&lt;a href=&quot;#2、打开Excel文件读取数据&quot; class=&quot;headerlink&quot; title=&quot;2、打开Excel文件读取数据&quot;&gt;&lt;/a&gt;2、打开Excel文件读取数据&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;data = xlrd.open_workbook(&lt;span class=&quot;string&quot;&gt;&#39;excelFile.xls&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3、使用技巧&quot;&gt;&lt;a href=&quot;#3、使用技巧&quot; class=&quot;headerlink&quot; title=&quot;3、使用技巧&quot;&gt;&lt;/a&gt;3、使用技巧&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;获取一个工作表&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;table = data.sheets()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]             &lt;span class=&quot;comment&quot;&gt;#通过索引顺序获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table = data.sheet_by_index(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)       &lt;span class=&quot;comment&quot;&gt;#通过索引顺序获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table = data.sheet_by_name(&lt;span class=&quot;string&quot;&gt;u&#39;Sheet1&#39;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;#通过名称获取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取整行和整列的值（数组）&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;table.row_values(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table.col_values(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 获取行数和列数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nrows = table.nrows&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ncols = table.ncols&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;循环行列表数据&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(nrows ):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; table.row_values(i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;单元格&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cell_A1 = table.cell(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cell_C4 = table.cell(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;).value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用行列索引&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cell_A1 = table.row(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cell_A2 = table.col(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单的写入&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;row = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;col = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;#类型 0 empty,1 string, 2 number, 3 date, 4 boolean, 5 error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ctype = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; value = &lt;span class=&quot;string&quot;&gt;&#39;单元格的值&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xf = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 扩展的格式化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table.put_cell(row, col, ctype, value, xf)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table.cell(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;#单元格的值&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table.cell(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).value &lt;span class=&quot;comment&quot;&gt;#单元格的值&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;画折线图&quot;&gt;&lt;a href=&quot;#画折线图&quot; class=&quot;headerlink&quot; title=&quot;画折线图&quot;&gt;&lt;/a&gt;画折线图&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xlrd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data = xlrd.open_workbook(&lt;span class=&quot;string&quot;&gt;&#39;D:\\Python Workspace\\Data\\cet4.xls&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table = data.sheets()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]   &lt;span class=&quot;comment&quot;&gt;#sheet 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;col5 = table.col_values(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]   &lt;span class=&quot;comment&quot;&gt;#取第5列的成绩，并去掉列属性名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;650&lt;/span&gt;)]  &lt;span class=&quot;comment&quot;&gt;#初始化count&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = [i &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;650&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; col5:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num = int(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count[num] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;#统计每个人数的人数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.xlabel(&lt;span class=&quot;string&quot;&gt;&#39;Score&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.ylabel(&lt;span class=&quot;string&quot;&gt;&#39;Number of people&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.title(&lt;span class=&quot;string&quot;&gt;&#39;Distribution of CET-4 Scores&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.ylim(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.plot([i &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;650&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; count[i] != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],[i &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; count[&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;:] &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],linewidth=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;#画出折线图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/cet4-1.png&quot; alt=&quot;图1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;画直方图并与正态分布直方图对比&quot;&gt;&lt;a href=&quot;#画直方图并与正态分布直方图对比&quot; class=&quot;headerlink&quot; title=&quot;画直方图并与正态分布直方图对比&quot;&gt;&lt;/a&gt;画直方图并与正态分布直方图对比&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xlrd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pylab &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; pl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data = xlrd.open_workbook(&lt;span class=&quot;string&quot;&gt;&#39;D:\\Python Workspace\\Data\\cet4.xls&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;table = data.sheets()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]   &lt;span class=&quot;comment&quot;&gt;#sheet 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;col5 = table.col_values(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ha = [int(i) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; col5]     &lt;span class=&quot;comment&quot;&gt;#成绩数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mu = np.mean(ha)      &lt;span class=&quot;comment&quot;&gt;#平均值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sigma = np.std(ha)    &lt;span class=&quot;comment&quot;&gt;#标准差&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data = np.random.normal(mu,sigma,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;#生成正态分布随机数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = np.linspace(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;700&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y = (&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt; / sqrt(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * np.pi) / sigma)*np.exp( -((x-mu)**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*sigma**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.hist(data,bins=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,facecolor=&lt;span class=&quot;string&quot;&gt;&#39;g&#39;&lt;/span&gt;,alpha=&lt;span class=&quot;number&quot;&gt;0.44&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.hist(ha,bins=&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;,facecolor=&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;,histtype=&lt;span class=&quot;string&quot;&gt;&#39;stepfilled&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.plot(x,y,color=&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;#正态分布曲线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.xlabel(&lt;span class=&quot;string&quot;&gt;&#39;Score&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.ylabel(&lt;span class=&quot;string&quot;&gt;&#39;Number of people&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.title(&lt;span class=&quot;string&quot;&gt;&#39;Distribution of CET-4 Scores&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;plt.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/cet4-2.png&quot; alt=&quot;图2&quot;&gt;&lt;br&gt;且可求得数据的均值和标准差分别为：476.743785851和104.816562585&lt;br&gt;由图可见，绿色条形图是$\mu$=476.743785851，$\sigma$=104.816562585的正态分布条形图，而红色是四级成绩数据的分布图，虽然由于数据较少(500多个数据），所以拟合较差，但是可以看出成绩数据还是基本满足正态分布的。&lt;br&gt;不知道为啥，正态曲线没有画出来，单独画正态曲线是可以画出来的，有待研究。&lt;/p&gt;
&lt;h2 id=&quot;绘制直方图的一些参数解释&quot;&gt;&lt;a href=&quot;#绘制直方图的一些参数解释&quot; class=&quot;headerlink&quot; title=&quot;绘制直方图的一些参数解释&quot;&gt;&lt;/a&gt;绘制直方图的一些参数解释&lt;/h2&gt;&lt;p&gt;绘图都可以调用matplotlib.pyplot库来进行，其中的hist函数可以直接绘制直方图。&lt;/p&gt;
&lt;p&gt;调用方式：&lt;br&gt;&lt;figure class=&quot;highlight nix&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;n, bins, &lt;span class=&quot;attr&quot;&gt;patches&lt;/span&gt; = plt.hist(arr, &lt;span class=&quot;attr&quot;&gt;bins=10,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;normed=0,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;facecolor=&#39;black&#39;,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;edgecolor=&#39;black&#39;,alpha=1，histtype=&#39;bar&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;hist的参数非常多，但常用的就这六个，只有第一个是必须的，后面四个可选&lt;/p&gt;
&lt;p&gt;arr: 需要计算直方图的一维数组&lt;/p&gt;
&lt;p&gt;bins: 直方图的柱数，可选项，默认为10&lt;/p&gt;
&lt;p&gt;normed: 是否将得到的直方图向量归一化。默认为0&lt;/p&gt;
&lt;p&gt;facecolor: 直方图颜色&lt;/p&gt;
&lt;p&gt;edgecolor: 直方图边框颜色&lt;/p&gt;
&lt;p&gt;alpha: 透明度&lt;/p&gt;
&lt;p&gt;histtype: 直方图类型，‘bar’, ‘barstacked’, ‘step’, ‘stepfilled’&lt;/p&gt;
&lt;p&gt;返回值 ：&lt;/p&gt;
&lt;p&gt;n: 直方图向量，是否归一化由参数normed设定&lt;/p&gt;
&lt;p&gt;bins: 返回各个bin的区间范围&lt;/p&gt;
&lt;p&gt;patches: 返回每个bin里面包含的数据，是一个list&lt;/p&gt;
&lt;p&gt;摘自&lt;a href=&quot;http://www.cnblogs.com/denny402/p/5124833.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt; from denny&lt;/p&gt;
&lt;h2 id=&quot;一些链接&quot;&gt;&lt;a href=&quot;#一些链接&quot; class=&quot;headerlink&quot; title=&quot;一些链接&quot;&gt;&lt;/a&gt;一些链接&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://matplotlib.org/1.5.1/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;matplotlib&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://matplotlib.org/gallery.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gallary&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://old.sebug.net/paper/books/scipydoc/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用python做科学计算&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://secure.simplistix.co.uk/svn/xlrd/trunk/xlrd/doc/xlrd.html?p=4966&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xlrd文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://m.oschina.net/blog/352125&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;numpy的一些方法&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近获得了一些四级成绩数据，大概500多个，于是突发奇想是否能够看看这些成绩数据是否满足所谓的正态分布呢？说干就干，于是有了这篇文章。&lt;br&gt;文章顺带介绍了xlrd模块的一些用法和matplotlib画自定义数据的条形图和随机的条形图的一些方法，并且提供了一些相关链接，可作
    
    </summary>
    
      <category term="数据挖掘分析与可视化" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>看《越狱》</title>
    <link href="http://whatbeg.com/2016/04/12/prisonbreak.html"/>
    <id>http://whatbeg.com/2016/04/12/prisonbreak.html</id>
    <published>2016-04-12T11:39:33.000Z</published>
    <updated>2016-04-19T13:38:40.574Z</updated>
    
    <content type="html">&lt;p&gt;最近在看《越狱》这部美剧，鉴于有几个朋友谈论到这部剧都是一副恨不得看他十遍八遍的表情，并且极力推荐，再加上最近没什么剧看，《太阳的后裔》也还可以，但是更新太慢了，于是就点开了这部剧。到现在已经看到第二季一半了，闲扯几句感受。&lt;/p&gt;
&lt;h2 id=&quot;人物&quot;&gt;&lt;a href=&quot;#人物&quot; class=&quot;headerlink&quot; title=&quot;人物&quot;&gt;&lt;/a&gt;人物&lt;/h2&gt;&lt;p&gt;我觉得这部剧的亮点就是两个，人物，还有后面的剧情。其中的人物个个都栩栩如生。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主角Scofield聪明稳重冷静，做好了充足的准备，又有灵活机变，感觉在他手中事情再突然再危险也能够化险为夷，这也是他们能够逃出来的主要原因。&lt;/li&gt;
&lt;li&gt;Burrows也是挺惨，被人陷害，一度就被执行死刑了，可是又活了下来，他勇猛有力，爱子情深，作为一个好兄长，好父亲，是条汉子！&lt;/li&gt;
&lt;li&gt;Sucre为情所困，为了守卫他的爱情，居然毅然抛弃仅剩一年多的去挑战逃狱，而这可能令他丧命或者获得更长的刑期，甚至逃出来也不一定能过安稳的生活，这我有点不能理解了，可能是狗狗们所不能理解的爱情的魔力吧。&lt;/li&gt;
&lt;li&gt;黑帮老大Abruzzi做事心狠手辣，看谁不顺眼就整谁，可到头来被比他更聪明的T-Bag一刀差点没挂掉，捡回一条命后逃了出去又把人家手给砍了，但是最后不知道他为啥一定要干掉作证的那个Fibonacci，都已经有罪了还怕人家指正？最后直接就死在埋伏之下，我开始想的是，一个黑帮老大逃出来生存率应该是最高的，至少不用疲于追捕，可以很不巧，第一个死的就是他。&lt;/li&gt;
&lt;li&gt;老头Charles（D.B Kooper）已经不是当年的大盗，他完全变成了一个好人，可是也很不幸，死在了越狱的路上。&lt;/li&gt;
&lt;li&gt;退役的老兵，Franklin，只因发现了军队里肮脏的事情，坚持自己的原则，就被搞进了牢里，他本来有一个幸福的家庭，他一直深爱着他家的两个女人，可是却没斗过现实的黑暗。&lt;/li&gt;
&lt;li&gt;小孩David误偷了人家的珍贵贺卡而入狱，狱中被各种摧残，各路势力都不待见他，他所作的一些都是为了逃脱痛苦，它本身并不恶，只是时运不济，最后虽然死的很惨，但是他没有背叛他的朋友，这点非常让我感动。ps:这个扮演者好像还真入狱了前几年。&lt;/li&gt;
&lt;li&gt;剧中我认为最恶毒的就是T-Bag了，虽然他很聪明，但是他自私，多疑，狠辣，变态，有仇必报，不相信任何人，手段极其残忍，这样的聪明迟早没有好下场。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他的人物个个都性格鲜明，不知道为什么要那么叛逆，疯狂吸毒的医生，为了正义不断奋斗的律师，心狠手辣但也身不由己探员，贪婪的狱警，善良的典狱长，等等等等，只要一想到某个人，马上就能够想到他们各自的特征。&lt;/p&gt;
&lt;h2 id=&quot;剧情&quot;&gt;&lt;a href=&quot;#剧情&quot; class=&quot;headerlink&quot; title=&quot;剧情&quot;&gt;&lt;/a&gt;剧情&lt;/h2&gt;&lt;p&gt;这部剧的剧情跌宕起伏，动人心弦，心脏不好的人慎看，各种出事故，各种化险为夷，到后来你看到一个危险场面你都可以猜出来:“会没事的”。而且虽然跌宕起伏，但是剧情仍然有条不紊的向前推进，没有丝毫的拖拉，非常果决，这就让人看着很爽，不比某些电视剧，有时候几集几集的讲一个场景故事，半天都没有进展。剧情一步一个变化，一集n个变化，这会使你更加期待后面会发生什么，会让你彻底陷入这部剧。。好口怕&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;全局来看，这部剧以正义为主题，涉及了亲情，友情，爱情，义气，忠诚，利益交换等等，每个人都把握着另一个人的把柄，或是能给别人带来好处，他才有价值，一切都是为了利益，没有永远的朋友，没有永远的敌人，只有永远的利益，每个人都追求着这种利益。&lt;/p&gt;
&lt;p&gt;且看后文大家的下场如何吧。^o^&lt;/p&gt;
&lt;p&gt;四月十二日&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在看《越狱》这部美剧，鉴于有几个朋友谈论到这部剧都是一副恨不得看他十遍八遍的表情，并且极力推荐，再加上最近没什么剧看，《太阳的后裔》也还可以，但是更新太慢了，于是就点开了这部剧。到现在已经看到第二季一半了，闲扯几句感受。&lt;/p&gt;
&lt;h2 id=&quot;人物&quot;&gt;&lt;a href=
    
    </summary>
    
      <category term="随笔" scheme="http://whatbeg.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://whatbeg.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="看剧" scheme="http://whatbeg.com/tags/%E7%9C%8B%E5%89%A7/"/>
    
  </entry>
  
  <entry>
    <title>浅谈排序学习</title>
    <link href="http://whatbeg.com/2016/04/12/learntorank.html"/>
    <id>http://whatbeg.com/2016/04/12/learntorank.html</id>
    <published>2016-04-12T07:55:35.000Z</published>
    <updated>2016-04-19T15:10:11.434Z</updated>
    
    <content type="html">&lt;h3 id=&quot;什么是排序学习？&quot;&gt;&lt;a href=&quot;#什么是排序学习？&quot; class=&quot;headerlink&quot; title=&quot;什么是排序学习？&quot;&gt;&lt;/a&gt;什么是排序学习？&lt;/h3&gt;&lt;p&gt;排序学习（Learn to Rank）是机器学习应用在排序上的一种方法。在排序学习中，我们的目标是预测出未知样本X的标号。在传统排序中，一般是通过自定义一个排序函数，用这个函数算出每条记录的序值，按序值进行排序。在搜索引擎中，给定一个查询q，搜索引擎返回一系列相关文档（一系列D的集合），而且肯定要按其相关度从大到小展示给用户，才能获得最佳的用户体验，即对(q,D)这样的项进行排序。影响相关度的一般有TF（词频）,IDF（逆文档频率）等等。传统解决这类问题的方法有向量空间模型，布尔模型等，但是缺点是一旦参数很多，那么按照经验方法调参会非常复杂。于是人们就想到能不能用机器学习的方法来做排序？机器学习的方法主要有两种学习任务，如果我们想要预测的是连续值，那么称为“回归”（Regression）；如果想要预测离散值，那么称为“分类”（Classification）。如果可以把排序问题转化成分类或者回归问题，那么排序问题就可以迎刃而解。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/%E6%8E%92%E5%BA%8F%E5%AD%A6%E4%B9%A0%E5%8E%9F%E7%90%86.jpg&quot; alt=&quot;图1 排序学习原理&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;排序学习的三种方法&quot;&gt;&lt;a href=&quot;#排序学习的三种方法&quot; class=&quot;headerlink&quot; title=&quot;排序学习的三种方法&quot;&gt;&lt;/a&gt;排序学习的三种方法&lt;/h3&gt;&lt;p&gt;根据训练数据的不同，当前人们提出了三种排序学习的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Point-Wise&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pair-Wise&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;List-Wise&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面逐一介绍这三种方法：&lt;/p&gt;
&lt;h4 id=&quot;Point-Wise-点方式&quot;&gt;&lt;a href=&quot;#Point-Wise-点方式&quot; class=&quot;headerlink&quot; title=&quot;Point-Wise　点方式&quot;&gt;&lt;/a&gt;Point-Wise　点方式&lt;/h4&gt;&lt;p&gt;将排序问题转化为多分类问题或者回归问题。考虑单一文档作为训练数据，不考虑文档间的关系。以多分类问题来说，即对于查询q,文档集D={d1,d2,…,dn}，可以形成(q,di)这样的训练样例n个，他们的相关度一般为5级：Perfect（完全相关），Excellent（非常相关），Good（很相关），Fair（一般），Bad（不相关）【在二分类问题就直接分为相关和不相关】，然后训练出分类模型，对未知的样本分类到这5类中的一类。&lt;br&gt;这种模型对相关度进行了绝对假设，即只要(q,di),(q,dj)分类在同一类，那么就无法比较他们谁更加相关了，分类效果较差，且与实际不相符。一般只需预测出标号，而非文档的具体分数。但是其模型简单，训练快。&lt;/p&gt;
&lt;h4 id=&quot;Pair-Wise-文档对方式&quot;&gt;&lt;a href=&quot;#Pair-Wise-文档对方式&quot; class=&quot;headerlink&quot; title=&quot;Pair-Wise　文档对方式&quot;&gt;&lt;/a&gt;Pair-Wise　文档对方式&lt;/h4&gt;&lt;p&gt;对于查询q和查询对应的文档集D={d1,d2,…,dn}，将每两个文档之间的相关度比较关系作为训练数据，最后训练出一个模型，使之能够判断任意两个文档之间相关度的大小关系，比如doc1&amp;gt;doc2,doc2&amp;lt; doc3,doc3&amp;lt; doc1，从而就可以对一组未知序的数据进行排序。&lt;br&gt;有两个问题：&lt;br&gt;1.只考虑文档间相关度大小关系，而没有考虑文档具体排序位置，在搜索引擎中，绝大部分查询用户只会看到第一页或者前面几页就可以了，那么肯定排在前面的文档排错的损失更大。针对这种情况，可以引入代价敏感因素，增加排在前面的文档的相关权重。&lt;br&gt;2.如果不同查询对应的相关文档数量差异很大的话，则不好判断准确率。如查询Q1对应100个文档对，判断正确99个，正确率99%，但另一个查询对应10个，判断正确1个，正确率10%，总共判断正确率=100/110，但是从查询角度，两个查询平均起来只有(10+99)%/2 = 54.5%。&lt;/p&gt;
&lt;h4 id=&quot;List-Wise-文档列表方式&quot;&gt;&lt;a href=&quot;#List-Wise-文档列表方式&quot; class=&quot;headerlink&quot; title=&quot;List-Wise 文档列表方式&quot;&gt;&lt;/a&gt;List-Wise 文档列表方式&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/listwise.jpg&quot; alt=&quot;图2 List-Wise方式&quot;&gt;&lt;br&gt;如图，以三个文档为例，先对给定的文档A,B,C人工打分，然后训练的目的就是使模型的评价结果更加贴近人工打分。对每个文档打分以后就得到3个文档的排列共6中排列的概率（或者分数）。我们给出一系列的人工打分构成训练集，训练评分函数。如何判断哪个更加精确呢？可以通过计算KL距离来计算概率分布之间的距离，当然还有其它方法也可以。最后要训练出一个距离跟我们人工打分最相似的评分函数。&lt;br&gt;经验证明这种方式比上述两种方法都更加准确，但是在实际应用中有很多问题，比如需要人工一个一个标注数据费时费力，因为每个文档都要打一次分，还得打很多组文档。而且复杂度太高，n篇文档的全排列有n!种，要把他们每种情况的概率都算出来需要巨大的计算量。所以这个方法用的还不多&lt;/p&gt;
&lt;h4 id=&quot;排序学习框架与三个方法的算法-（图摘自网络）&quot;&gt;&lt;a href=&quot;#排序学习框架与三个方法的算法-（图摘自网络）&quot; class=&quot;headerlink&quot; title=&quot;排序学习框架与三个方法的算法 （图摘自网络）&quot;&gt;&lt;/a&gt;排序学习框架与三个方法的算法 （图摘自网络）&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/LTRframework.jpg&quot; alt=&quot;图片3 排序学习框架&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/LTRalgorithm.jpg&quot; alt=&quot;图片4 排序学习算法&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是排序学习？&quot;&gt;&lt;a href=&quot;#什么是排序学习？&quot; class=&quot;headerlink&quot; title=&quot;什么是排序学习？&quot;&gt;&lt;/a&gt;什么是排序学习？&lt;/h3&gt;&lt;p&gt;排序学习（Learn to Rank）是机器学习应用在排序上的一种方法。在排序学习中，我们的
    
    </summary>
    
      <category term="机器学习" scheme="http://whatbeg.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>我的前大学书单</title>
    <link href="http://whatbeg.com/2016/04/08/booklist1.html"/>
    <id>http://whatbeg.com/2016/04/08/booklist1.html</id>
    <published>2016-04-08T13:20:10.000Z</published>
    <updated>2016-04-08T13:30:30.678Z</updated>
    
    <content type="html">&lt;p&gt;整理一下大学前两年读过的书单，现在发现书读了这么多，其实作用并不大，而且看看这些书名就知道好多书都是个坑！现在看来，我是浪费了多少时间啊，很多书照现在的我看来，看一眼标题就直接会扔掉的。但是反过来想想，或许是我读过很多烂书，于是现在才学会甄选上等书籍的缘故？&lt;br&gt;总之，接下来读书，只有3种情况：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.专业领域有口皆碑的上等书籍。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.按需读书，需要了解什么方面的知识技能，就读某方面的高质量书籍。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;3.闲着看看的小说或科普书或者经典文学作品。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面就是2012年9月到2015年1月的书单，后面的就没有记录了，我觉得推荐的就会将其加粗显示。&lt;/p&gt;
&lt;h2 id=&quot;2012年9月-2013年7月&quot;&gt;&lt;a href=&quot;#2012年9月-2013年7月&quot; class=&quot;headerlink&quot; title=&quot;2012年9月-2013年7月&quot;&gt;&lt;/a&gt;2012年9月-2013年7月&lt;/h2&gt;&lt;p&gt;●2012年9月（2）&lt;br&gt;1.《西方哲学心理学史》……车文博&lt;br&gt;2.&lt;strong&gt;《联想风云》…………凌志军&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;●2012年10月（3）&lt;br&gt;3.《计算机科学导论》&lt;br&gt;4.&lt;strong&gt;《飞鸟集》…………泰戈尔&lt;/strong&gt;&lt;br&gt;5.《吉檀迦利》……泰戈尔&lt;/p&gt;
&lt;p&gt;●2012年11月（4）&lt;br&gt;6.《苏格拉底最后的日子》……柏拉图&lt;br&gt;7.&lt;strong&gt;《黄金时代》……………………王小波&lt;/strong&gt;&lt;br&gt;8.《资本的灵魂》………………赵延忱&lt;br&gt;9.《巴菲特幕后的智囊团》……陈惠仁&lt;/p&gt;
&lt;p&gt;●2012年12月（6）&lt;br&gt;10.《说话的艺术》………………林语堂&lt;br&gt;11.《哈佛决策》……………………张雪松（译）&lt;br&gt;12.《时间管理》……………………肯·齐格勒&lt;br&gt;13.《向卡耐基学习演讲口才的技巧》……曾强&lt;br&gt;14.《即战力》…………………………大前研一&lt;br&gt;15.《把任何东西卖给任何人》……乔·吉纳徳&lt;/p&gt;
&lt;p&gt;●2013年1月（6）&lt;br&gt;16.《草根创业》……………………曹垣亮&lt;br&gt;17.《淘宝网新手开店日记》……小铁柱哥&lt;br&gt;18.《危机管理案例》………………朱瑞博  编&lt;br&gt;19.《一口气读懂经济学》……唐华山，冯怿莎编著&lt;br&gt;20.《搭讪圣经》……………………（台）郑匡宇&lt;br&gt;21.《新月集》…………………………泰戈尔&lt;/p&gt;
&lt;p&gt;●2013年2月（4）&lt;br&gt;22.《行走台湾》……………………伊乐&lt;br&gt;23.《看懂经济迷局》……………尚晓娟&lt;br&gt;24.《直销员口才与沟通训练》……博瑞森营销培训讲师组 编&lt;br&gt;25.《赚钱，从大学开始》…………王光宇（台湾）&lt;/p&gt;
&lt;p&gt;●2013年6月（2）&lt;br&gt;26.《图解心理学》………….（日）深堀元文&lt;br&gt;27.&lt;strong&gt;《致加西亚的信》…………阿尔伯特·哈博德&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;●2013年7月（3）&lt;br&gt;28.《爱默生散文精选》…………爱默生&lt;br&gt;29.&lt;strong&gt;《第一本尼采箴言漫画》……尼采&lt;/strong&gt;&lt;br&gt;30.《暗恋物语》……………………爱东吴&lt;/p&gt;
&lt;h2 id=&quot;2013年9月-2015年1月&quot;&gt;&lt;a href=&quot;#2013年9月-2015年1月&quot; class=&quot;headerlink&quot; title=&quot;2013年9月-2015年1月&quot;&gt;&lt;/a&gt;2013年9月-2015年1月&lt;/h2&gt;&lt;p&gt;●2013年9月（5）&lt;br&gt;31.《偏要和陌生人说话》………..黄志坚（编著）&lt;br&gt;32.《为什么大家都在读超级好玩心理学》…….田浩&lt;br&gt;33.《我就是想要你成为幽默高手》………张源侠&lt;br&gt;34.《塔木德》…………………….西方经典，第二圣经&lt;br&gt;35.《魔鬼搭讪学》………………….魔鬼咨询师&lt;/p&gt;
&lt;p&gt;●2013年10月（8）&lt;br&gt;36.&lt;strong&gt;《沉思录》…………………………马可.奥勒留&lt;/strong&gt;&lt;br&gt;37.《如何在大学里脱颖而出》………卡尔.纽坡特&lt;br&gt;38.《德国历史》…………………………朱忠武，刘祺宝&lt;br&gt;39.《尼采自述》…………………………尼采&lt;br&gt;40.《乔布斯产品圣经》…………………史蒂夫.乔布斯&lt;br&gt;41.《因为痛，所以叫青春》……………金兰都&lt;br&gt;42.《孙子兵法》…………………………孙武&lt;br&gt;43.《图说天下·法国》…………………图说天下编委会&lt;/p&gt;
&lt;p&gt;●2013年11月（2）&lt;br&gt;44.《图说天下·英国》………………图说天下编委会&lt;br&gt;45.《乔布斯语录》……………………杨旭光编著&lt;/p&gt;
&lt;p&gt;●2013年12月（2）&lt;br&gt;46.《中西哲学小史》 …………冯友兰&lt;br&gt;47.&lt;strong&gt;《卓有成效的管理者》  ………彼得.德鲁克&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;●2014年1月 （6）&lt;br&gt;48.《给青年的十二封信》 ………朱光潜&lt;br&gt;49.《文章做法》 …………………夏丐尊&lt;br&gt;50.&lt;strong&gt;《说话的魅力》 ………… 刘墉&lt;/strong&gt;&lt;br&gt;51.《中国佛教文化常识》 ………商景桂&lt;br&gt;52.《清净的智慧》 ……………证严法师&lt;br&gt;53.《童蒙止观》&lt;/p&gt;
&lt;p&gt;●2014年2月（7）&lt;br&gt;54.&lt;strong&gt;《把话说到心窝里》 ………刘墉&lt;/strong&gt;&lt;br&gt;55.《大数据时代》 ………维克托.舍恩伯格&lt;br&gt;56.《你不可不知的人性》……刘墉&lt;br&gt;57.《慧律法雨》……………慧律法师&lt;br&gt;58.《心灵处方》 …………星云大师&lt;br&gt;59.《静思语》 ……………证严法师&lt;br&gt;60.《根除烦恼的秘诀》……周老师&lt;/p&gt;
&lt;p&gt;●2014年3月（2）&lt;br&gt;61.《内向所以成功》 ………榎本博明&lt;br&gt;62.《安静-内向性格的竞争力》 …苏珊.凯恩&lt;/p&gt;
&lt;p&gt;●2014年4月（1）&lt;br&gt;63.&lt;strong&gt;《尼采的心灵咒语》 ………尼采&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;●2014年6月（1）&lt;br&gt;64.《哈佛校长演讲辞-现实与梦想》 ………洛厄尔&lt;/p&gt;
&lt;p&gt;●2014年7月（6）&lt;br&gt;65.《了凡四训》 ………袁了凡&lt;br&gt;66.《朱子家训解析》&lt;br&gt;67.《颜氏家训名句》&lt;br&gt;68.《我是一只IT小小鸟》 ……胡江堂主编&lt;br&gt;69.《数论及应用》  ………陈宇主编&lt;br&gt;70.&lt;strong&gt;《明朝那些事儿第2部》 ……当年明月&lt;/strong&gt; （这个系列都推荐）&lt;/p&gt;
&lt;p&gt;●2014年8月（3）&lt;br&gt;71.《明朝那些事儿第3部》 ……当年明月&lt;br&gt;72.《图说天下·德国》  ………图说天下&lt;br&gt;73.《人生为何不同》  …………叔本华&lt;/p&gt;
&lt;p&gt;●2014年10月（1）&lt;br&gt;74.&lt;strong&gt;《黄帝内经》&lt;/strong&gt;  （博大精深）&lt;/p&gt;
&lt;p&gt;●2014年12月（4）&lt;br&gt;75.《数论及其应用》   ……周治国 主编&lt;br&gt;76.《一生要读的50首诗歌》&lt;br&gt;77.《人性需要揭穿》   ……葛拉西安&lt;br&gt;78.《美好的旅行》 &lt;/p&gt;
&lt;p&gt;●2015年1月（1）&lt;br&gt;79.《查拉图斯特拉如是说》     ……尼采&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理一下大学前两年读过的书单，现在发现书读了这么多，其实作用并不大，而且看看这些书名就知道好多书都是个坑！现在看来，我是浪费了多少时间啊，很多书照现在的我看来，看一眼标题就直接会扔掉的。但是反过来想想，或许是我读过很多烂书，于是现在才学会甄选上等书籍的缘故？&lt;br&gt;总之，接
    
    </summary>
    
      <category term="成长之路" scheme="http://whatbeg.com/categories/%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>快速学会Git基本操作</title>
    <link href="http://whatbeg.com/2016/04/07/git.html"/>
    <id>http://whatbeg.com/2016/04/07/git.html</id>
    <published>2016-04-07T15:35:15.000Z</published>
    <updated>2016-04-19T13:37:28.518Z</updated>
    
    <content type="html">&lt;h3 id=&quot;什么是Git&quot;&gt;&lt;a href=&quot;#什么是Git&quot; class=&quot;headerlink&quot; title=&quot;什么是Git?&quot;&gt;&lt;/a&gt;什么是Git?&lt;/h3&gt;&lt;p&gt;Git应该是现在最受欢迎的版本控制系统了，而且免费开源，可以直接连到github上进行合作开发，分布式的，安全性高。按我的理解，git就是帮你管理代码，你写好了它帮你添加为软件的一部分，你写错了它帮你退回来在写，代码逐渐地添加到软件中去，直到这个软件完成。&lt;/p&gt;
&lt;h3 id=&quot;为什么要学习Git？&quot;&gt;&lt;a href=&quot;#为什么要学习Git？&quot; class=&quot;headerlink&quot; title=&quot;为什么要学习Git？&quot;&gt;&lt;/a&gt;为什么要学习Git？&lt;/h3&gt;&lt;p&gt;自从学习利用hexo部署静态博客以来，经常需要接触到Git Bash，虽然更新博客时用到的只是hexo g,hexo s,hexo d等指令，但是其中仍是依靠git来完成的。&lt;br&gt;可以说git的使用是一个开发人员必备的技能，因为现在大部分的项目都是以合作形式来开发的，所以学会用工具与他人合作至关重要。&lt;br&gt;所以今天中午去学习了下Git，发现学习基本的git操作其实很简单，尤其是当你有了一些版本库的基本知识之后。&lt;/p&gt;
&lt;h3 id=&quot;一些收获&quot;&gt;&lt;a href=&quot;#一些收获&quot; class=&quot;headerlink&quot; title=&quot;一些收获&quot;&gt;&lt;/a&gt;一些收获&lt;/h3&gt;&lt;p&gt;下面我就git学习过程写下一些收获，一来总结，二来可以备忘。&lt;/p&gt;
&lt;p&gt;Git安装就不说了，网上一搜大把。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建版本库&lt;/strong&gt;&lt;br&gt;先建立一个目录以便存放版本库以及代码等信息。可以直接新建文件夹或者在git bash中mkdir建立。&lt;br&gt;建立目录以后在文件夹中右键在此位置启动git bash，或者在git bash中用cd命令切换到此目录，输入git init，这样一个版本库就创建好了。&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;mkdir mygit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;cd mygit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时目录中会生成一个.git文件夹（默认是隐藏的，Windows下可以修改查看让其显示，Linux下ls指令即可显示），此即所谓的版本库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分清几个概念&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;工作区： mygit文件夹（目录）&lt;/li&gt;
&lt;li&gt;版本库： .git文件夹（目录）&lt;/li&gt;
&lt;li&gt;暂存区： .git面的index文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;git往版本库添加文件是分两步的,暂存区起一个缓冲作用：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.git add命令将文件存入暂存区&lt;br&gt;2.git commit命令将暂存区中的&lt;strong&gt;所有&lt;/strong&gt;修改提交到版本库当前分支&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以下面就好办了：&lt;br&gt;&lt;strong&gt;添加文件到版本库以及提交到版本库&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git add readme.md            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#description是本次提交的说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用的git命令&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git status    &lt;span class=&quot;comment&quot;&gt;#查看版本库当前状态，哪些文件改变了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git diff readme.md  &lt;span class=&quot;comment&quot;&gt;#查看readme.md文件的变化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git log       &lt;span class=&quot;comment&quot;&gt;#查看提交历史&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git reflog    &lt;span class=&quot;comment&quot;&gt;#查看命令历史&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;cat readme.md  &lt;span class=&quot;comment&quot;&gt;#查看readme文件内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;版本回退&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git reset --hard HEAD^  &lt;span class=&quot;comment&quot;&gt;#退回到上一版本，两个^表示退回到上上个版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git reset --hard [command-id] &lt;span class=&quot;comment&quot;&gt;#直接退回到某一条命令，命令id可以在reflog中查看&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;管理和撤销修改，删除文件&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git diff HEAD -- readme.md  &lt;span class=&quot;comment&quot;&gt;#查看版本库和工作区中readme.md文件的区别&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git checkout -- readme.md  &lt;span class=&quot;comment&quot;&gt;#撤销readme.md文件在工作区（整个文件夹）的修改，即退回到最近一次git add 或 git commit之前的状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git reset HEAD readme.md  &lt;span class=&quot;comment&quot;&gt;#撤销暂存区的修改，就是最近一次git add失效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git rm readme.md  &lt;span class=&quot;comment&quot;&gt;#删除一个文件，如果误删，只要版本库中有这个文件，那么可以checkout恢复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;连接Github远程仓库&lt;/strong&gt;&lt;br&gt;如果没有本地与Github的SSH-key，那么需要生成一个，随便在哪打开git bash:&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;ssh-keygen -t rsa -C &lt;span class=&quot;string&quot;&gt;&quot;youremail@example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后一路回车即可，在系统盘找到.ssh文件夹（默认隐藏），复制id_rsa.pub(公钥)文件中的内容，到你的Github网站上的SSH-keys，随便取个名字，复制上去就行了。(id_rsa文件是密钥文件，不要泄露）&lt;br&gt;为了判断连接是否成功，可以输入：&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;ssh&lt;/span&gt; -T git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果是下面的反馈：&lt;br&gt;&lt;figure class=&quot;highlight vbnet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;The authenticity &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; host &lt;span class=&quot;comment&quot;&gt;&#39;github.com (207.97.227.239)&#39; can&#39;t be established.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RSA &lt;span class=&quot;keyword&quot;&gt;key&lt;/span&gt; fingerprint &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;:ac:a5:&lt;span class=&quot;number&quot;&gt;76&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;d:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;b:&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;d:eb:df:a6:&lt;span class=&quot;number&quot;&gt;48.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Are you sure you want &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt; connecting (yes/no)?&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入yes就好了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;添加远程库，推送&amp;amp;克隆&lt;/strong&gt;&lt;br&gt;首先在Github上新建一个repository，然后在工作区git bash中输入：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;git remote add origin git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;symbol&quot;&gt;com:&lt;/span&gt;whatbeg/mygit.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意替换账户名和Repo名。&lt;br&gt;然后可以推送到远程库或者从远程库克隆：&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git push -u origin &lt;span class=&quot;keyword&quot;&gt;master&lt;/span&gt;   &lt;span class=&quot;title&quot;&gt;#第一次加-u&lt;/span&gt;，而后则不用加了，-u起到一个关联作用，显然关联一次就可以了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;git&lt;/span&gt;@github.com:whatbeg/mygit.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于分支管理，标签管理等暂时还没用到，所以后面在写吧。&lt;/p&gt;
&lt;p&gt;参考文章：&lt;br&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廖雪峰Git教程&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是Git&quot;&gt;&lt;a href=&quot;#什么是Git&quot; class=&quot;headerlink&quot; title=&quot;什么是Git?&quot;&gt;&lt;/a&gt;什么是Git?&lt;/h3&gt;&lt;p&gt;Git应该是现在最受欢迎的版本控制系统了，而且免费开源，可以直接连到github上进行合作开发，分布式的
    
    </summary>
    
      <category term="计算机相关知识" scheme="http://whatbeg.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="CS" scheme="http://whatbeg.com/tags/CS/"/>
    
      <category term="Git" scheme="http://whatbeg.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建独立博客遇到的问题及处理几则</title>
    <link href="http://whatbeg.com/2016/04/07/hexofault.html"/>
    <id>http://whatbeg.com/2016/04/07/hexofault.html</id>
    <published>2016-04-07T01:21:30.000Z</published>
    <updated>2016-04-20T05:41:13.541Z</updated>
    
    <content type="html">&lt;p&gt;用hexo+github搭建个人博客时出现过一些错误，有一些已经忘记了，把记得的两个记录一下，以防以后系统重装后又要搭建时要到处找解决方法。&lt;/p&gt;
&lt;h3 id=&quot;搭建工具&quot;&gt;&lt;a href=&quot;#搭建工具&quot; class=&quot;headerlink&quot; title=&quot;搭建工具&quot;&gt;&lt;/a&gt;搭建工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Windows 8.1 -64bit&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nodejs 5.9.0 -64bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git 2.8.0 -64bit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;错误1-安装hexo时出现-‘operation-not-permitted’&quot;&gt;&lt;a href=&quot;#错误1-安装hexo时出现-‘operation-not-permitted’&quot; class=&quot;headerlink&quot; title=&quot;错误1: 安装hexo时出现 ‘operation not permitted’&quot;&gt;&lt;/a&gt;错误1: 安装hexo时出现 ‘operation not permitted’&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/2.png&quot; alt=&quot;图1&quot;&gt;&lt;br&gt;解决方法：&lt;br&gt;没有权限，可以在开始菜单找到cmd（命令行），右键以管理员身份运行，这时候就有root权限了，然后在cmd中转到你的hexo目录下(如D:\hexo），再运行npm install -g hexo即可&lt;/p&gt;
&lt;h3 id=&quot;错误2-hexo-init时出现-‘ERROR-Local-hexo-not-found-in-’&quot;&gt;&lt;a href=&quot;#错误2-hexo-init时出现-‘ERROR-Local-hexo-not-found-in-’&quot; class=&quot;headerlink&quot; title=&quot;错误2: hexo init时出现 ‘ERROR Local hexo not found in ..’&quot;&gt;&lt;/a&gt;错误2: hexo init时出现 ‘ERROR Local hexo not found in ..’&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/4.png&quot; alt=&quot;图2&quot;&gt;&lt;br&gt;解决办法：&lt;br&gt;到这一步，其实说明hexo没有安装成功，办法就是再像上个错误那样，进入管理员cmd，再安装一下hexo即可，建议npm install也在cmd中做了。&lt;br&gt;出现的那些WARN 其实不用管它，是有一个包没有安装成功，因为不适合此操作系统，但其实不影响。&lt;/p&gt;
&lt;p&gt;暂时只记得这么多了，以后再遇到问题再加上来。&lt;br&gt;hexo+github搭建独立博客具体教程参考:&lt;a href=&quot;http://tengj.top&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tengj&lt;/a&gt;等&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;用hexo+github搭建个人博客时出现过一些错误，有一些已经忘记了，把记得的两个记录一下，以防以后系统重装后又要搭建时要到处找解决方法。&lt;/p&gt;
&lt;h3 id=&quot;搭建工具&quot;&gt;&lt;a href=&quot;#搭建工具&quot; class=&quot;headerlink&quot; title=&quot;搭建工具&quot;&gt;
    
    </summary>
    
      <category term="错误解决或优化" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%88%96%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="hexo" scheme="http://whatbeg.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>《HTTP权威指南》书评</title>
    <link href="http://whatbeg.com/2016/04/06/httpguide.html"/>
    <id>http://whatbeg.com/2016/04/06/httpguide.html</id>
    <published>2016-04-06T03:09:46.000Z</published>
    <updated>2016-04-30T14:06:37.560Z</updated>
    
    <content type="html">&lt;p&gt;《HTTP权威指南》是公认比较经典的书了，刚好前段时间在做Web相关方面的工作，而且遇到了难题，所以便拿起了这本书来读，以求能对HTTP协议的原理与机制做更深的了解。&lt;/p&gt;
&lt;p&gt;读到后面我才知道，原来这本书的英文版是2002年出版的，而中文版到2012年才出版，所以我一直以为它是12年出的，可惜并不是。如此一来导致书中很多内容会出现老旧和不再适用的情况。我选择略去不读这些内容。当然大部分内容还是现在通用的。还有一个问题就是这本书的翻译读起来总感觉怪怪的，我觉得如果说有败笔，那么最大的败笔就是翻译了。&lt;/p&gt;
&lt;p&gt;总体说来这本书是值得一看的，书中非常全面详细地叙述了HTTP的基本知识，资源、报文格式，以及中间结构如网关，代理，隧道等等，并且还涉及认证、安全，编码，Web机器人…基本你能想到的东西他都写了。但是全面必然会牺牲深度，以至于我看到很多内容都是我们计算机网络课上学过的，这本书并没有深入多少，所以有些内容就看的比较快了。而且700多页的书有200多页的附录，当手边的手册使也是极好的。&lt;/p&gt;
&lt;p&gt;全书主要内容分为5个部分&lt;/p&gt;
&lt;h4 id=&quot;第一部分&quot;&gt;&lt;a href=&quot;#第一部分&quot; class=&quot;headerlink&quot; title=&quot;第一部分&quot;&gt;&lt;/a&gt;第一部分&lt;/h4&gt;&lt;p&gt;讲述了Web基础和HTTP基础，包括什么是URI(URL+URN)，资源，事务，保温，连接，报文，响应等等等等。几乎是每一个Web相关工作人员都必看的。&lt;/p&gt;
&lt;h4 id=&quot;第二部分&quot;&gt;&lt;a href=&quot;#第二部分&quot; class=&quot;headerlink&quot; title=&quot;第二部分&quot;&gt;&lt;/a&gt;第二部分&lt;/h4&gt;&lt;p&gt;HTTP结构，讲述了服务器，代理，缓存，网关，隧道，中继等内容，相对前面较深入，也是我觉得最有收获的一章，让我对HTTP的体系结构有更深入的了解。还讲述了Web机器人即网络爬虫的一些机制，第一次知道还有robot.txt这个东西来限制爬虫行为。。&lt;/p&gt;
&lt;h4 id=&quot;第三部分&quot;&gt;&lt;a href=&quot;#第三部分&quot; class=&quot;headerlink&quot; title=&quot;第三部分&quot;&gt;&lt;/a&gt;第三部分&lt;/h4&gt;&lt;p&gt;识别，认证与安全，识别讲述cookies机制，认证讲述基本认证和摘要认证，安全方面介绍了HTTPS的机制。并且讲述了很多安全隐患以及如何避免的问题。Web安全相关人员必看，而且现在HTTPS正在成为主流，应该看下。&lt;/p&gt;
&lt;h4 id=&quot;第四部分&quot;&gt;&lt;a href=&quot;#第四部分&quot; class=&quot;headerlink&quot; title=&quot;第四部分&quot;&gt;&lt;/a&gt;第四部分&lt;/h4&gt;&lt;p&gt;实体，编码和国际化，主要讲编码的问题，由于不涉及到这方面的开发类型的工作，就简单扫了一下。&lt;/p&gt;
&lt;h4 id=&quot;第五部分&quot;&gt;&lt;a href=&quot;#第五部分&quot; class=&quot;headerlink&quot; title=&quot;第五部分&quot;&gt;&lt;/a&gt;第五部分&lt;/h4&gt;&lt;p&gt;Web主机托管和重定向可以看下，其余两章过于老旧，可略过。&lt;/p&gt;
&lt;p&gt;基本就是这些，总体还是值得一看，看完能够对HTTP的整个运行体系有一个大概的了解，但是如果要达到深入理解的水平，还需要在实践中不断磨练。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;《HTTP权威指南》是公认比较经典的书了，刚好前段时间在做Web相关方面的工作，而且遇到了难题，所以便拿起了这本书来读，以求能对HTTP协议的原理与机制做更深的了解。&lt;/p&gt;
&lt;p&gt;读到后面我才知道，原来这本书的英文版是2002年出版的，而中文版到2012年才出版，所以我一
    
    </summary>
    
      <category term="读书" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="Web" scheme="http://whatbeg.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>我的NJU-CS考研路</title>
    <link href="http://whatbeg.com/2016/04/05/kaoyan.html"/>
    <id>http://whatbeg.com/2016/04/05/kaoyan.html</id>
    <published>2016-04-05T10:52:17.000Z</published>
    <updated>2016-04-05T11:03:11.720Z</updated>
    
    <content type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;从去年7月15号正式准备考研以来，直到今天，3月24号，一共经历8个多月，考研初步告捷，在此想跟大家分享一下自己的经验，希望能对接下来考研的学弟学妹们有所帮助。&lt;/p&gt;
&lt;p&gt;首先介绍下我自己的情况，本科一般985，计算机科学与技术专业，工程方向，报考的是NJU计算机系，考的四门专业课都学过，但是学的一般，分数370多一点，除了数学其他三门大概都在意料之中，只是数学，我真没想到有辣么多分，因为印象中是有几十分没做的，可能是因为做的绝大部分都对了，这都得归功于平时运算能力的训练以及考场上的稳定发挥了，毕竟今年数学好难，考场上看见时间不剩多少了却还有一大片题没做，心里其实是很慌的，在这样的心理状态下运算是很容易出问题的，我不得不更加细心地注意每一个细节。当然，也有很大的运气成分在里头。&lt;/p&gt;
&lt;p&gt;首先说一下我的时间分配吧，我是从2015年7月15号正式开始全面复习的，不严格意义上说，3月份就一直在听数学补习班，但是2015上半年正在抓紧大三的尾巴，争取把成绩搞上去直接保研，所以数学并没花太多时间，只是有空跟一跟，临近期末更是碰都不碰了。并且上半年操作系统，系统结构都在开课，这也算提前准备专业课了吧。说回到7月，当时目标并不是南大，或者说都没有一个明确的目标，所以只是按部就班地每天复习6-7个小时，这算是第一阶段。随后觉得进度不够快，又稍微加了晚上一两个小时，这是第二阶段。到9月8号还是9号，终于选定了一个完全不在原来计划里的南大，觉得自己是时候拼一把了，那个时候对考上的欲望极其强烈，随后进入第三阶段，”拼命三郎“模式，每天6点多起，七点吃完饭到图书馆，开始做一上午数学，然后吃个中饭，趴一会，搞一下午专业课，吃完晚饭，晚上做做英语，看看政治，10点图书馆关门，回宿舍休息。一天基本就是这样的模式，基本不变，不知不觉就坚持了3个多月（9~12月），直到考试，所谓心中有渴望才能坚持到底，才能乐在其中啊。&lt;/p&gt;
&lt;p&gt;说完了时间分配，再具体说一下我每门课的复习过程吧，不过这都只是适用于我个人，千万不要照搬。&lt;/p&gt;
&lt;h2 id=&quot;政治&quot;&gt;&lt;a href=&quot;#政治&quot; class=&quot;headerlink&quot; title=&quot;政治&quot;&gt;&lt;/a&gt;政治&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;资料：《肖秀荣精讲精练》、《肖秀荣1000题》、《风中劲草冲刺背诵核心考点》、《肖秀荣四套卷》、《肖秀荣八套卷》、徐之明形势与政策红书&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;政治是10月份开始的，之前一点都没看过，因为我知道，那么早看了也是白看，辅导班也没报，反正我觉得没甚大用。首先我是把精讲精练的整本书扫一遍，看的比较细，全是为了在脑子里留下个印象，并没有奢望全都记住。看完一章或一节，就同步刷下1000题，刷起来很快，刷题可以帮助我们更好地记住知识点，这两套书我好像高了很久很久，到只有一个多月的时候开始看风中劲草，到考前，风中劲草看了两遍，还是有很多没记住。再后来肖8，肖4出来了就开始刷，同时再看看风中劲草。大题其实都没怎么刷，都是看看答案，理一下答案的思路过程，因为我估计以及看他们的答案以后，已经不指望考试像答案一样，看到大题马上准确地搬来知识点答上去了，只求能有一些思路，有东西可写就行。最后那个形势政策书就看看，重要的记一记，政治大概就这样了，事实也证明了，这个东西我还真拿不了高分，保平稳就行。&lt;/p&gt;
&lt;h2 id=&quot;英语&quot;&gt;&lt;a href=&quot;#英语&quot; class=&quot;headerlink&quot; title=&quot;英语&quot;&gt;&lt;/a&gt;英语&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;资料：《张剑阅读150篇》、《张剑历年真题2005-2015》、《新东方单词乱序版》、百词斩、作文辅导班、朱泰祺八套题（坑，忽略）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;英语从暑假开始就开始做了，当时每天会做一到两篇张剑阅读，又不会的单词我都会标出来，然后查，记，这样往往对答案和查单词的时间比做一篇阅读的时间还长。一直到把它做完也到9月还是10月了，期间一直通过百词斩背单词，一天100，隔天复习，单词量提升可以更加地便于看懂文章，但是别以为看懂文章就能做对题了，很多时候，文章越看得懂，题越错得多，可能是因为看懂了的话会加入一些主观臆断在里头，没看懂，反而更加细心地去找文章出处，反而正确率高，这点要注意，一定要以文章为中心去做题。做完阅读就刷真题，除了不写作文，其他的花一个晚上计时做，做完对答案，成绩时好时坏吧。12月初报了一个作文辅导班，写作文的速度明显提高，原因是走套路了，事实证明，走套路也没什么不好，至少不用花很多时间去思考、卡住了，想一想，当你1个小时做完两篇作文时，接下来的时间将会多么轻松愉快啊。。反正我就是这么干的。到临近考试，我才又把新东方那本厚厚的绿书拿出来看，这时候许多单词也都认识了，看到一些好的单词或者例句，我会想着怎么把它们用到我的作文里去，虽然最后好像没怎么用到，但是毕竟也是一种准备。最后我说一句，英语这个东西，好像考试的时候都不怎么坑我。。&lt;/p&gt;
&lt;h2 id=&quot;数学&quot;&gt;&lt;a href=&quot;#数学&quot; class=&quot;headerlink&quot; title=&quot;数学&quot;&gt;&lt;/a&gt;数学&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;资料：本校教材、《李永乐复习全书》、《基础过关660题》、《400题》、《李永乐十年真题》、辅导班内部资料、辅导班十套卷&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数学是重头戏了，要说理工科考研，最拉分的也是数学，我不赞成大量地投资政治英语，当然，英语如果很不好的话还是要补，但是到了一定程度还花费大量的时间是不值当的，而数学必须要认真对待。开始我先把四本教材仔细的看了一遍，同时同步完成全书的内容，这样四本书看下来我从7月开始，一直到10月才搞完。。，搞完一遍再搞第二遍全书，重点针对那些不会的题，并且600题也开始做了，然后600题刷完，开刷真题和400题，全书再扫一遍，这时候我能扫出的东西也很少了。真题有很多年份都是比较简单的，所以光刷真题还不够，我买了一套400题，感觉挺难的，每次3个小时搞不定，有考的好的朋友推荐合工大的5套题，据说非常好，但是我没做555…。在做这些的同时，因为我报了辅导班，一直跟着辅导班走，这个辅导班是我们学校都非常有名的，感觉还是有很多收获的，所以没有翘过一堂课，当时在最后一堂课的时候，我们还在开玩笑，说我们班最后一节课还在上的这5个人都会考上的，结果虽然并不圆满，但是也考上了4个，再想想其他没来的，想不起来有谁考上了。好神奇。。&lt;/p&gt;
&lt;h2 id=&quot;专业课&quot;&gt;&lt;a href=&quot;#专业课&quot; class=&quot;headerlink&quot; title=&quot;专业课&quot;&gt;&lt;/a&gt;专业课&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;资料：王道四本书、教材、专业课2013-2015真题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;专业课复习也是重头戏，这个我每天都会花一个下午，开始的比较晚，四本书加王道从9.15看到10.29，后面会有我的时间表。首先把每本书从头到尾看一遍，虽是这样说，但是有的地方该不看还是不看，比如一些不考的章节，一些非重要的代码等等。看一遍的同时同步做王道，这样有助于消化你看的。845的话，操作系统可以看别的教材，但是指定教材还是要扫一下，因为有很多别的书上没有但是会考的点（举个栗子，信号）。网络的话我看的谢老师的书，都差不多。组原一定要看推荐教材，并且同步刷对应的学习指导书，有非常大的作用。数据结构也看的推荐教材，内容丰富一点，其他书应该也是可以的。搞完第一遍王道，很多大题其实都是没做的，所以第二遍王道重点把那些大题搞了搞。然后就是反复看，王道教我们的专业课复习的宗旨是“全面+反复”，我觉得非常受用。反正我是一直没有压缩专业课和数学的时间。&lt;/p&gt;
&lt;h2 id=&quot;感想&quot;&gt;&lt;a href=&quot;#感想&quot; class=&quot;headerlink&quot; title=&quot;感想&quot;&gt;&lt;/a&gt;感想&lt;/h2&gt;&lt;p&gt;考研这一路，要说累也累，反正我会想一下是不愿意再来一次的。但要说不累也不累，那时你的旁边会有许多跟你一样的人，你们一起作息，相互交流，你攻克一本又一本的书，这样的感觉又会让你感到非常充实，经常会忘记累不累。所以说，决定了就干吧，骚年，你还年轻，还输得起~&lt;/p&gt;
&lt;p&gt;个人认为，考研成功需要几样东西： &lt;strong&gt;踏实、坚持、灵活与运气&lt;/strong&gt;。首先要踏实，不能浮在表面上，要自己一个字一个字啃，一个题一个题做，来不得半点糊弄和吊儿郎当，糊弄也是糊弄自己，这么说是因为看到了这样的例子。其次是坚持，既然决定要考研，就要抱有坚定的决心，任何事物都不能动摇，坚持到底，就会有收获。再一个就是灵活，必须经常根据自己的情况制定复习策略，必要时也需要对复习策略做一定的调整，而不是一把刷子走天下，比如说，哪科复习的慢了，会影响整个大局进度或者心境，那么你就需要稍微加快一点。时刻想一想这样复习的作用大么，如果觉得不好，收效甚微，那么及时调整才是胜道，我也见过一些临考了还有几门没复习的童鞋，我听着都着急。。运气就不用说了，不能强求，或许运气这种东西跟实力是成正比的也说不定，所以尽管尽人事就好了。&lt;/p&gt;
&lt;p&gt;关于队友的事情，我也不好说，反正我是基本一个人在复习，我把所有人都当成队友，但是有没有队友，我个人觉得，找队友要慎重，毕竟他是会影响你的，不管好的影响还是坏的影响，我没有找到，所以就一个人了。&lt;br&gt;关于辅导班的事情，其实个人觉得，政治英语什么的完全可以不报，政治你听人家给你梳理一遍作用不大，而且还有可能产生你已经会很多了的假象。英语的话，可以考虑报个作文班，总之，报班一定要产生很大的作用才去报，否则不如不报，突然浪费时间金钱。&lt;/p&gt;
&lt;h2 id=&quot;复试&quot;&gt;&lt;a href=&quot;#复试&quot; class=&quot;headerlink&quot; title=&quot;复试&quot;&gt;&lt;/a&gt;复试&lt;/h2&gt;&lt;p&gt;说起复试真是辛酸，考完嗨了快两个月，回学校才开始准备复试，笔试考离散、编译，虽然之前学过，但是有很多是没教过的，必须自学，编译还好，离散实在有点难，尤其一个群论搞得我头疼，面试的话就看了一些面试题，感觉今年真正的面试跟论坛上分享的那些面试题完全不同啊，智力题、数学题什么的根本没问。准备机试的话，去的头几天刷了几年的真题，都是一些链表，后来又刷了几十道LeetCode，虽然感觉少了点，但是时间实在不够了，事实上真的机试是OJ形式，就跟ACM题一样，可惜由于种种原因，只做出来一题，第一题拓扑排序，第二题格式整理（模拟、字符串）,第二题感觉有点繁杂，当时也没多少时间细想，敲来敲去，没瞧出来。&lt;/p&gt;
&lt;p&gt;面试的话，老师上来常规性地看了一眼名字和成绩，甩一句英文：introduce one app in your phone，英文说得太少，结结巴巴半天总算是说完了。然后就问调试，方面的，答得不是很好，然后问了两个项目，介绍完以后都问了一些扩展性地问题，基本不会啊，因为做哪些小项目的时候根本没有考虑别的，没想到拓展，就是做着玩的555…感觉面试好gg。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;好啦，写这么多一是为了留个回忆在这，给以后的自己看看，而是希望能对未来考研的筒子们有所帮助，那样我会很开心的。还有最后一句，一定不要怂，要敢于把眼光放高一点，但是同时也要脚踏实地，你们是可以的！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;从去年7月15号正式准备考研以来，直到今天，3月24号，一共经历8个多月，考研初步告捷，在此想跟大家分享一下自己的经验，希望
    
    </summary>
    
      <category term="成长之路" scheme="http://whatbeg.com/categories/%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="CS" scheme="http://whatbeg.com/tags/CS/"/>
    
  </entry>
  
  <entry>
    <title>毕业设计(阶段二)</title>
    <link href="http://whatbeg.com/2016/04/05/graduatedesign.html"/>
    <id>http://whatbeg.com/2016/04/05/graduatedesign.html</id>
    <published>2016-04-05T10:52:00.000Z</published>
    <updated>2016-04-20T04:32:02.901Z</updated>
    
    <content type="html">&lt;p&gt;毕设已经做到了后续数据分析阶段，中期答辩的日子也临近了，可是下面的问题也随之而来，需要好好想一想或者和老师讨论下了。&lt;/p&gt;
&lt;h2 id=&quot;毕设第二轮问题&quot;&gt;&lt;a href=&quot;#毕设第二轮问题&quot; class=&quot;headerlink&quot; title=&quot;毕设第二轮问题&quot;&gt;&lt;/a&gt;毕设第二轮问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;中期答辩的进度要求。&lt;ul&gt;
&lt;li&gt;是要做完实际工作？还是不必？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;建立文章链接网络的必要性&lt;ul&gt;
&lt;li&gt;文章链接关系不是没有，但是却不多&lt;/li&gt;
&lt;li&gt;文章链接网络的建立较用户关注网络的建立复杂太多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;已知文章的诸多指标如何建立评价模型的问题&lt;ul&gt;
&lt;li&gt;已知阅读量、评论数、推荐数、作者pagerank值，作者hits值等等，如何尽量客观地建立评价模型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;创新点的问题及应用场景的问题&lt;ul&gt;
&lt;li&gt;很难想象毕设做到现在创新点和应用场景仍不明确&lt;/li&gt;
&lt;li&gt;感觉毕设就是进行了一些数据的爬取，以及建立模型（还未做，不知简单与否）的过程，前期写了很多爬取代码，但是那是必须的么？或是根本就可以利用现成的数据集呢？如果只是按流程走一遍，那么毕设工作的开创性，或者说别人没做过的东西是哪些？或者说优于别人现有工作的是哪些？&lt;/li&gt;
&lt;li&gt;进行文章影响力的挖掘的应用场景，已知的包括：&lt;ul&gt;
&lt;li&gt;广告投放&lt;/li&gt;
&lt;li&gt;猎头&lt;/li&gt;
&lt;li&gt;约稿出书&lt;/li&gt;
&lt;li&gt;。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;毕设已经做到了后续数据分析阶段，中期答辩的日子也临近了，可是下面的问题也随之而来，需要好好想一想或者和老师讨论下了。&lt;/p&gt;
&lt;h2 id=&quot;毕设第二轮问题&quot;&gt;&lt;a href=&quot;#毕设第二轮问题&quot; class=&quot;headerlink&quot; title=&quot;毕设第二轮问题&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="数据挖掘分析与可视化" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%88%86%E6%9E%90%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="CS" scheme="http://whatbeg.com/tags/CS/"/>
    
  </entry>
  
</feed>
